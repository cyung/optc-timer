angular.module("app",["ui.router","ngMaterial","LocalStorageModule","md.data.table","pascalprecht.translate"]),function(){"use strict";function AdminCtrl(adminFactory,userFactory,navbarFactory){function activate(){navbarFactory.setSeo("Admin","Admin page for managing event dates."),adminFactory.getTurtleDates(function(err,globalDates,japanDates){return err?void console.log("err =",err):(self.globalDates=globalDates,void(self.japanDates=japanDates))})}var self=this;self.globalDates=[],self.japanDates=[],self.globalSelected=[],self.japanSelected=[],self.password=userFactory.getPassword(),activate(),self.addBoth=function(){self.addDate("global"),self.addDate("japan")},self.addDate=function(version){var date=self.turtleDate.toISOString().slice(0,10);adminFactory.addTurtleDate(date,version,function(err){return err?void console.log("err =",err):(console.log("Added turtle date"),void activate())})},self.removeSelectedDates=function(){var dates=self.globalSelected.map(function(date){return{turtleDate:date,version:"global"}}).concat(self.japanSelected.map(function(date){return{turtleDate:date,version:"japan"}}));adminFactory.removeTurtleDates(dates,function(err){return err?void console.log("err =",err):void activate()})},self.removePastDates=function(){function getPastDates(version){var oldDates="global"===version?self.globalDates.slice().reverse():self.japanDates.slice().reverse(),oldDates=oldDates.filter(function(date){return moment.utc(date).add(1,"days").isBefore(moment.utc())}).map(function(date){return{turtleDate:date,version:version}});return oldDates=oldDates.slice(0,5*Math.floor(oldDates.length/5))}var oldDates=getPastDates("global").concat(getPastDates("japan"));adminFactory.removeTurtleDates(oldDates,function(err){return err?void console.log("err =",err):(console.log("removed old dates"),void activate())})},self.addQuarter=function(){adminFactory.addQuarter(function(err){err&&console.log("err =",err),activate()})},self.updatePassword=function(){userFactory.setPassword(self.password)}}angular.module("app").controller("AdminCtrl",AdminCtrl),AdminCtrl.$inject=["adminFactory","userFactory","navbarFactory"]}(),function(){"use strict";function adminFactory($http,apiFactory,userFactory){function getTurtleDates(cb){$http.get(apiFactory.getBaseUrl()+"/api/turtle/date").then(function(response){for(var globalDates=[],japanDates=[],i=0;i<response.data.length;i++)"global"===response.data[i].version?globalDates.push(response.data[i].turtleDate):japanDates.push(response.data[i].turtleDate);cb(null,globalDates,japanDates)})["catch"](function(){cb("unable to get turtle dates")})}function addQuarter(cb){function addDateToArray(arr,turtleDate,version){arr.push({turtleDate:turtleDate,version:version})}for(var NUM_WEEKS=13,dates=[],start=moment.utc().startOf("isoWeek"),i=0;NUM_WEEKS>i;i++)addDateToArray(dates,start.format("YYYY-MM-DD"),"global"),addDateToArray(dates,start.format("YYYY-MM-DD"),"japan"),start.add("4","days"),addDateToArray(dates,start.format("YYYY-MM-DD"),"japan"),start.add("3","days");addTurtleDates(dates,cb)}function addTurtleDates(dates,cb){for(var runCount=0,i=0;i<dates.length;i++)addTurtleDate(dates[i].turtleDate,dates[i].version,function(err){err&&console.log("err =",err),++runCount===dates.length&&cb()})}function addTurtleDate(dateString,version,cb){var turtleDate=convertToUTC(dateString);$http.post(apiFactory.getBaseUrl()+"/api/turtle/date",{turtleDate:turtleDate,version:version,password:userFactory.getPassword()}).then(function(){cb(null)})["catch"](function(){cb("Unable to send message")})}function removeTurtleDates(dates,cb){dates=dates.map(function(date){return{turtleDate:convertToUTC(date.turtleDate),version:date.version,password:userFactory.getPassword()}}),console.log("dates =",dates);for(var runCount=0,i=0;i<dates.length;i++)removeTurtleDate(dates[i],function(err){err&&console.log("err =",err),++runCount===dates.length&&cb()})}function removeTurtleDate(turtleDate,cb){var params={params:turtleDate};$http["delete"](apiFactory.getBaseUrl()+"/api/turtle/date",params).then(function(){cb(null)})["catch"](function(){cb("Unable to delete "+params.turtleDate)})}function convertToUTC(dateString){return moment.utc(dateString).format("x")}var services={addTurtleDate:addTurtleDate,addTurtleDates:addTurtleDates,removeTurtleDates:removeTurtleDates,getTurtleDates:getTurtleDates,addQuarter:addQuarter};return services}angular.module("app").factory("adminFactory",adminFactory),adminFactory.$inject=["$http","apiFactory","userFactory"]}(),function(){"use strict";function barrelCtrl($mdMedia,userFactory,barrelFactory,navbarFactory){function setParams(){navbarFactory.setSeo("Barrel Breaking","Look up when to play the friend game with this up-to-date chart."),self.version=userFactory.getVersion(),self.barrelTimes=barrelFactory.getBarrelTimes(),self.format=userFactory.getDetailedHourStatus()}var self=this;setParams(),self.updateVersion=function(){userFactory.setVersion(self.version),self.barrelTimes=barrelFactory.getBarrelTimes()},self.isLargeScreen=function(){return $mdMedia("gt-md")},self.showHours=function(){userFactory.setDetailedHourStatus(self.format)}}angular.module("app").controller("BarrelCtrl",barrelCtrl),barrelCtrl.$inject=["$mdMedia","userFactory","barrelFactory","navbarFactory"]}(),function(){"use strict";function barrelFactory(userFactory){function getBarrelTimes(){function getTime(dayNum){var startOfDay=start.clone().add(dayNum,"days"),wood=[0,5,4,9,3,8,4,9,2,7,3,8,1,6,2,7,0,5,1,6],silver=[1,6,2,7,0,5,1,6,0,5,4,9,3,8,4,9,2,7,3,8],gold=[3,8,2,7,1,6,0,5,4,9],offset=dayNum+dayOfYear+4,index1=4*offset%20,index2=2*offset%10,woodDigits=wood.slice(index1,index1+4),silverDigits=silver.slice(index1,index1+4),goldDigits=gold.slice(index2,index2+2),date=startOfDay.format("YYYY-MM-DD");return{date:date,woodDigits:woodDigits,silverDigits:silverDigits,goldDigits:goldDigits,hourDisplay:hourDisplay}}for(var version=userFactory.getVersion(),NUM_DAYS=5,barrelTimes=[],data=getStartEndTimes(version),start=data.start,end=data.end,hourDisplay=start.clone().local().format("HH:mm")+"-"+end.clone().local().format("HH:mm"),dayOfYear=start.dayOfYear(),i=0;NUM_DAYS>i;i++)barrelTimes.push(getTime(i));return barrelTimes}function getStartEndTimes(version){var now=moment(),hourOffset="global"===version?12:6,start=moment.utc().startOf("day").add(hourOffset,"hours"),end=start.clone().add(23,"hours").add(59,"minutes");return now.isAfter(end)&&(start.add(1,"day"),end.add(1,"day")),{start:start,end:end}}var services={getBarrelTimes:getBarrelTimes};return services}angular.module("app").factory("barrelFactory",barrelFactory),barrelFactory.$inject=["userFactory"]}(),angular.module("app").config(function($translateProvider){$translateProvider.translations("en",{NAV_TURTLE:"Turtle Time",NAV_BARREL:"Barrel Breaking",NAV_EVENT:"Event",NAV_CONTACT:"Contact Me",NAV_SETTINGS:"Settings",TT_TITLE:"Turtle Time Calculator",TT_DIGIT:"6th digit of ID",TT_FORMAT:"Time Format",TT_STANDARD:"Standard",TT_MILITARY:"24hr format",TT_TIMEZONE:"Time Zone:",TT_SEEMORE:"See More",TT_ADD_CALENDAR:"Add to Calendar",TT_NOTIFICATION:"Chrome/Android Notifications",TT_HTML_NOTIFICATION:"HTML Notifications",TT_NOTIF_TEST:"Example Chrome/Android Notification",TT_HTML_NOTIF_TEST:"Example HTML Notification",TT_NOTIF_MINUTES:"Notification time in advance",TT_MINUTES:"Minutes",TT_NOTIF_SOUND:"Play sound",TT_NOTIF_EXAMPLE:"Example",BB_TITLE:"Barrel Breaking",BB_TIME:"Time till next rotation:",BB_ALT:"Show Hours",BB_DATE:"Date",BB_WOODEN:"Wooden",BB_SILVER:"Silver",BB_GOLD:"Gold"}).translations("de",{NAV_TURTLE:"Turtle Zeiten",NAV_BARREL:"Friend Game",NAV_EVENT:"Ereignis",NAV_CONTACT:"Kontaktiere Mich",NAV_SETTINGS:"Einstellungen",TT_TITLE:"Turtle Zeiten Rechner",TT_DIGIT:"6te Ziffer der ID",TT_FORMAT:"Zeitformat",TT_STANDARD:"Standard",TT_MILITARY:"24-Stunden",TT_TIMEZONE:"Zeitzone:",TT_SEEMORE:"siehe mehr",TT_ADD_CALENDAR:"Zum Kalender hinzufügen",TT_NOTIFICATION:"Chrome/Android Benachrichtigung",TT_HTML_NOTIFICATION:"HTML Benachrichtigung",TT_NOTIF_TEST:"Beispiel Chrome/Android Benachrichtigung",TT_HTML_NOTIF_TEST:"Beispiel HTML Benachrichtigung",TT_NOTIF_MINUTES:"HTML-Benachrichtigung",TT_MINUTES:"Minuten",TT_NOTIF_SOUND:"Ton abspielen",TT_NOTIF_EXAMPLE:"Beispiel",BB_TITLE:"Barrel Breaking",BB_TIME:"Zeit bis zum nächsten Wechsel:",BB_ALT:"Anzeige Stunden",BB_DATE:"Datum",BB_WOODEN:"Holz",BB_SILVER:"Silber",BB_GOLD:"Gold"}).translations("es",{NAV_TURTLE:"Horario Tortugas",NAV_BARREL:"Friend Game",NAV_EVENT:"Evento",NAV_CONTACT:"Contáctame",NAV_SETTINGS:"Configuración",TT_TITLE:"Horario Tortugas Calculadora",TT_DIGIT:"6th dígito de ID",TT_FORMAT:"formato de tiempo",TT_STANDARD:"estándar",TT_MILITARY:"24 horas",TT_TIMEZONE:"Zona Horaria:",TT_SEEMORE:"ver más",TT_ADD_CALENDAR:"Añadir al calendario",TT_NOTIFICATION:"Notificaciones de Chrome/Android",TT_HTML_NOTIFICATION:"Notificaciones de HTML",TT_NOTIF_TEST:"Test Chrome/Android Notification",TT_HTML_NOTIF_TEST:"Test HTML Notification",TT_NOTIF_MINUTES:"Minutos antes de evento",TT_MINUTES:"Minutos",TT_NOTIF_SOUND:"Reproducir sonido",TT_NOTIF_EXAMPLE:"Ejemplo",BB_TITLE:"Friend Game",BB_TIME:"Tiempo hasta la próxima rotación:",BB_ALT:"Mostrar las horas",BB_DATE:"Fecha",BB_WOODEN:"Madera",BB_SILVER:"Plata",BB_GOLD:"Oro"}).translations("fr",{NAV_TURTLE:"Horaires des Tortues",NAV_BARREL:"Partie d'amis",NAV_EVENT:"Event",NAV_CONTACT:"Me Contacter",NAV_SETTINGS:"Réglages",TT_TITLE:"Calculateur de l'Horaire des Tortues",TT_DIGIT:"6eme chiffre ID",TT_FORMAT:"format de l'heure",TT_STANDARD:"normale",TT_MILITARY:"24h",TT_TIMEZONE:"Fuseau Horaire:",TT_SEEMORE:"Lire la suite",TT_ADD_CALENDAR:"Ajouter au Calendrier",TT_NOTIFICATION:"Notifications Google/Android",TT_HTML_NOTIFICATION:"Notifications HTML",TT_NOTIF_TEST:"Test Chrome/Android Notification",TT_HTML_NOTIF_TEST:"Test HTML Notification",TT_NOTIF_MINUTES:"Temps Restant avant Event",TT_MINUTES:"Minutes",TT_NOTIF_SOUND:"Jouer le son",TT_NOTIF_EXAMPLE:"Exemple",BB_TITLE:"Éclatement du Tonneau",BB_TIME:"Temps jusqu'à la Prochaine Rotation:",BB_ALT:"Afficher les Heures",BB_DATE:"Date",BB_WOODEN:"Bois",BB_SILVER:"Argent",BB_GOLD:"Or"}),$translateProvider.preferredLanguage("en"),$translateProvider.useSanitizeValueStrategy("escaped")}),function(){"use strict";function contactCtrl($http,apiFactory,navbarFactory){var self=this;self.subjects=["Incorrect Turtle Time","Report a bug","Other"],self.message={},navbarFactory.setSeo("Contact Me","Find a bug? Have a question or feedback? Contact me and let me know."),self.isTurtleBug=function(){return void 0===self.message.subject?!1:"Incorrect Turtle Time"===self.message.subject},self.sendMessage=function(){self.status="Sending...",$http.post(apiFactory.getBaseUrl()+"/contact",self.message).then(function(){self.status="Sent!"})["catch"](function(){self.status="Error sending. Please try again later."})}}angular.module("app").controller("ContactCtrl",contactCtrl),contactCtrl.$inject=["$http","apiFactory","navbarFactory"]}(),function(){"use strict";function eventsCtrl($mdMedia,userFactory,eventsFactory,navbarFactory){function setParams(){navbarFactory.setSeo("Events","Event information and and up-to-date table on story isle bonuses."),self.version=userFactory.getVersion(),self.eventTimes=eventsFactory.getEventTimes(),self.format=userFactory.getDetailedHourStatus()}var self=this;setParams(),self.updateVersion=function(){userFactory.setVersion(self.version),self.eventTimes=eventsFactory.getEventTimes()},self.isLargeScreen=function(){return $mdMedia("gt-md")},self.showHours=function(){userFactory.setDetailedHourStatus(self.format)}}angular.module("app").controller("EventsCtrl",eventsCtrl),eventsCtrl.$inject=["$mdMedia","userFactory","eventsFactory","navbarFactory"]}(),function(){"use strict";function eventsFactory(userFactory){function getEventTimes(){function getTime(dayNum){var offset=dayNum+dayOfYear+3;offset%=7;var drop=dropTable[offset].split(","),stamina=staminaTable[offset].split(","),beli=beliTable[offset].split(","),startDate=start.clone().add(dayNum,"days"),hourOffset="global"===version?23:11,end=startDate.clone().add(hourOffset,"hours").add(59,"minutes"),date=startDate.format("YYYY-MM-DD"),hourString=startDate.format("HH:mm")+"-"+end.format("HH:mm");return{date:date,hourDisplay:hourString,drop:drop,stamina:stamina,beli:beli}}for(var version=userFactory.getVersion(),NUM_DAYS=5,dropTable=["Loguetown, Jaya","Arlong Park, Alubarna","Baratie, Nanohana Rainbase","Syrup Village, Drum Island","Orange Town, Little Garden","Shell Town, Whiskey Peak, Ark Maxim","Alvida's Hideout, Twin Cape, Skypia"],staminaTable=["Orange Town, Drum Island","Shell Town, Little Garden","Alvida's Hideout, Whiskey Peak, Ark Maxim","Fuschia Village, Twin Cape, Skypia","Loguetown, Jaya","Arlong Park, Alubarna","Baratie, Nanohana Rainbase"],beliTable=["Baratie, Whiskey Peak, Ark Maxim","Syrup Village, Twin Cape, Skypia","Loguetown, Jaya","Arlong Park, Alubarna","Baratie, Nanohana Rainbase","Syrup Village, Drum Island","Little Garden"],start=getStartTime(version),dayOfYear=start.dayOfYear(),eventTimes=[],i=0;NUM_DAYS>i;i++)eventTimes.push(getTime(i));return eventTimes}function getStartTime(version){var hourOffset="global"===version?8:2,start=moment.utc().startOf("day").add(hourOffset,"hours"),now=moment();return now.isAfter(start)&&start.subtract(1,"day"),start}var services={getEventTimes:getEventTimes};return services}angular.module("app").factory("eventsFactory",eventsFactory),eventsFactory.$inject=["userFactory"]}(),function(){"use strict";function apiFactory(){function getBaseUrl(){return"localhost"==document.location.hostname?"http://localhost:3000":"https://optctimer.com"}var services={getBaseUrl:getBaseUrl};return services}angular.module("app").factory("apiFactory",apiFactory),apiFactory.$inject=[]}(),function(){"use strict";function calendarFactory(userFactory){function getCalendar(){for(var begin,end,now=moment(),turtleTimes=userFactory.getTurtleTimes().filter(function(turtleTime){return now.isBefore(turtleTime)}),cal=ics(),subject="OPTC Turtle Time",description="One Piece Treasure Cruise Turtle Time",location="OPTC",i=0;4>i;i++)begin=turtleTimes[i].format(),end=turtleTimes[i].clone().add(30,"minutes").format(),cal.addEvent(subject,description,location,begin,end);cal.download("turtle_times",".ics")}var services={getCalendar:getCalendar};return services}angular.module("app").factory("calendarFactory",calendarFactory),calendarFactory.$inject=["userFactory"]}(),function(){"use strict";function htmlNotificationFactory(userFactory){function isEnabled(){var mobileAndTabletCheck=(/iPad|iPhone|iPod/.test(navigator.userAgent),function(){var check=!1;return function(a){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))&&(check=!0)}(navigator.userAgent||navigator.vendor||window.opera),check});return"Notification"in window&&!mobileAndTabletCheck()?(Notification.requestPermission(),!0):!1}function setNotifications(){for(var timeUntil,turtleTimes=userFactory.getTurtleTimes(),soundEnabled=userFactory.getHtmlNotificationSoundStatus(),now=moment(),minutes=userFactory.getTimeBeforeNotification(),options={body:minutes+" minutes till Turtle Time!",icon:"favicon.ico"},end=moment().add(3,"days"),i=0;i<turtleTimes.length;i++)now.isAfter(turtleTimes[i])||turtleTimes[i].isAfter(end)||(timeUntil=turtleTimes[i].format("x")-now.format("x"),timeUntil-=1e3*minutes,0>timeUntil||isNaN(timeUntil)||(void 0!==notifications[i]&&clearTimeout(notifications[i]),notifications[i]=setTimeout(function(){new Notification("OPTC Turtle Time",options);soundEnabled&&sound.play()},timeUntil)))}function playExample(){var minutes=userFactory.getTimeBeforeNotification(),soundEnabled=userFactory.getHtmlNotificationSoundStatus(),options={body:minutes+" minutes till Turtle Time!",icon:"../images/flag.png"};new Notification("OPTC Turtle Time",options);soundEnabled&&sound.play()}var services={isEnabled:isEnabled,setNotifications:setNotifications,playExample:playExample},notifications=[],sound=new Audio("sounds/notification.mp3");return services}angular.module("app").factory("htmlNotificationFactory",htmlNotificationFactory),htmlNotificationFactory.$inject=["userFactory"]}(),function(){"use strict";function notificationFactory($http,userFactory,apiFactory){function isEnabled(){return"serviceWorker"in navigator}function attachWorker(){return new Promise(function(resolve,reject){isEnabled()?navigator.serviceWorker.register("service-worker.js").then(function(){return navigator.serviceWorker.ready}).then(function(serviceWorkerRegistration){reg=serviceWorkerRegistration,console.log("Service Worker is ready."),resolve()})["catch"](function(err){console.log("Service Worker Error."),reject(err)}):reject("service workers not supported")})}function subscribe(cb){function aux(){reg.pushManager.getSubscription().then(function(pushSubscription){return pushSubscription?(sub=pushSubscription,sendSubscriptionToServer(),cb(null)):void reg.pushManager.subscribe({userVisibleOnly:!0}).then(function(pushSubscription){sub=pushSubscription,console.log("endpoint =",sub.endpoint),console.log("Subscribed."),sendSubscriptionToServer(),cb(null)})["catch"](function(err){console.log("Unable to subscribe."),cb(err)})})}reg?aux():attachWorker().then(function(){aux()})["catch"](function(err){console.log(err)})}function unsubscribe(cb){sub.unsubscribe().then(function(event){console.log("Unsubscribed.",event),cb(null)})["catch"](function(err){console.log("Error unsubscribing."),cb(err)})}function sendSubscriptionToServer(){var endpoint=sub.endpoint;if(endpoint.match(/^https:\/\/android\.googleapis\.com\/gcm\/send/)){var registrationId=endpoint.match(/(?:.*?)send\/(.*)$/)[1];endpoint="https://android.googleapis.com/gcm/send",userFactory.setRegistrationId(registrationId)}}function playExample(){var data={registrationIds:[userFactory.getRegistrationId()]};console.log("data =",data),$http.post(apiFactory.getBaseUrl()+"/api/gcm",data).then(function(){console.log("sent to server")})["catch"](function(){console.log("error posting to server")})}var reg,sub,services={isEnabled:isEnabled,subscribe:subscribe,unsubscribe:unsubscribe,playExample:playExample};return services}angular.module("app").factory("notificationFactory",notificationFactory),notificationFactory.$inject=["$http","userFactory","apiFactory"]}(),function(){"use strict";function timeFactory($http,userFactory,apiFactory){function getTurtleTimes(cb){var params={params:{digit:userFactory.getDigit(),timeFormat:userFactory.getTimeFormat(),version:userFactory.getVersion(),numOfDays:3}};$http.get(apiFactory.getBaseUrl()+"/api/turtle",params).then(function(response){userFactory.setTurtleTimes(response.data.map(function(time){return moment.utc(time)}));var turtleTimes=getFormattedTimes(response.data);cb(null,turtleTimes)})["catch"](function(err){cb(err)})}function getFormattedTimes(turtleTimes){var timeFormat=userFactory.getTimeFormat();return turtleTimes.map(function(timeStr){var time,date,turtleTime=moment.utc(timeStr);return"standard"===timeFormat?time=turtleTime.local().format("h:mm a"):"military"===timeFormat&&(time=turtleTime.local().format("HH:mm")),date=turtleTime.local().format("LL"),{time:time,date:date}})}var services={getTurtleTimes:getTurtleTimes};return services}angular.module("app").factory("timeFactory",timeFactory),timeFactory.$inject=["$http","userFactory","apiFactory"]}(),function(){"use strict";function turtleCtrl($scope,userFactory,timeFactory,notificationFactory,htmlNotificationFactory,calendarFactory,navbarFactory){function setParams(){navbarFactory.setSeo("Turtle Time Calculator","Determine your upcoming turtle time on this automatically-updating calculator and and receive a push notification on Android or desktop browser."),self.timezone=userFactory.getTimeZone(),self.digit=userFactory.getDigit(),self.version=userFactory.getVersion(),self.turtleTimes=[],self.notificationStatus=!0,self.htmlNotificationStatus=userFactory.getHtmlNotificationStatus(),self.notificationEnabled=notificationFactory.isEnabled(),self.htmlNotificationEnabled=htmlNotificationFactory.isEnabled(),getTurtleTimes(),toggleNotification()}function toggleNotification(){self.notificationStatus?notificationFactory.subscribe(function(err){return err?(self.notificationStatus=!1,void console.log(err)):void console.log("subscribed")}):notificationFactory.unsubscribe(function(err){return err?(console.log(err),void(self.notificationStatus=!0)):void console.log("unsubscribed")})}function getTurtleTimes(){timeFactory.getTurtleTimes(function(err,turtleTimes){return err?void console.log("unable to retrieve times"):void(self.turtleTimes=turtleTimes)})}var self=this;setParams(),self.toggleNotification=function(){toggleNotification()},self.updateDigit=function(){userFactory.setDigit(self.digit),getTurtleTimes()},self.updateVersion=function(){userFactory.setVersion(self.version),getTurtleTimes()},self.updateHtmlNotificationStatus=function(){userFactory.setHtmlNotificationStatus(self.htmlNotificationStatus),htmlNotificationFactory.setNotifications()},self.playExampleNotification=function(){notificationFactory.playExample()},self.playExampleHtmlNotification=function(){htmlNotificationFactory.playExample()},self.getCalendar=function(){calendarFactory.getCalendar()}}angular.module("app").controller("TurtleCtrl",turtleCtrl),turtleCtrl.$inject=["$scope","userFactory","timeFactory","notificationFactory","htmlNotificationFactory","calendarFactory","navbarFactory"]}(),function(){"use strict";function userFactory(localStorageService,$http,apiFactory,$translate){function loadFromStorage(){digit=localStorageService.get("digit")||0,timeFormat=localStorageService.get("timeFormat")||"standard",version=localStorageService.get("version")||"global",htmlNotificationStatus=localStorageService.get("htmlNotificationStatus")||!1,htmlNotificationSoundStatus=localStorageService.get("htmlNotificationSoundStatus")||!1,timeBeforeNotification=localStorageService.get("timeBeforeNotification")||10,detailedHourStatus=localStorageService.get("detailedHourStatus")||!1,locale=localStorageService.get("locale")||"en",$translate.use(locale),moment.locale(locale),password=localStorageService.get("password")||""}function postUserData(){var data={digit:digit%5,registrationId:registrationId,timeBefore:timeBeforeNotification};$http.post(apiFactory.getBaseUrl()+"/api/users",data).then(function(){console.log("posted subscription to server")})["catch"](function(){console.log("error posting subscription to server")})}function getTimeZone(){return jstz.determine().name()}function getDigit(){return digit}function setDigit(d){digit=d%5,localStorageService.set("digit",d),postUserData()}function getTimeFormat(){return timeFormat}function setTimeFormat(tf){timeFormat=tf,localStorageService.set("timeFormat",tf)}function getVersion(){return version}function setVersion(v){version=v,localStorageService.set("version",v)}function getHtmlNotificationStatus(){return htmlNotificationStatus}function setHtmlNotificationStatus(h){htmlNotificationStatus=h,localStorageService.set("htmlNotificationStatus",h)}function getTurtleTimes(){return turtleTimes}function setTurtleTimes(tt){turtleTimes=tt}function getHtmlNotificationSoundStatus(){return htmlNotificationSoundStatus}function setHtmlNotificationSoundStatus(s){htmlNotificationSoundStatus=s,localStorageService.set("htmlNotificationSoundStatus",s)}function getTimeBeforeNotification(){return timeBeforeNotification}function setTimeBeforeNotification(t){timeBeforeNotification=t,localStorageService.set("timeBeforeNotification",t),postUserData()}function getRegistrationId(){return registrationId}function setRegistrationId(r){registrationId=r,postUserData()}function getDetailedHourStatus(){return detailedHourStatus}function setDetailedHourStatus(d){detailedHourStatus=d,localStorageService.set("detailedHourStatus",d)}function getLocale(){return locale}function setLocale(l){locale=l,localStorageService.set("locale",l),$translate.use(l),moment.locale(locale)}function getPassword(){return password}function setPassword(p){password=p,localStorageService.set("password",p)}var digit,timeFormat,version,htmlNotificationStatus,htmlNotificationSoundStatus,turtleTimes,timeBeforeNotification,registrationId,detailedHourStatus,locale,password,services={getTimeZone:getTimeZone,getDigit:getDigit,setDigit:setDigit,getTimeFormat:getTimeFormat,setTimeFormat:setTimeFormat,getVersion:getVersion,setVersion:setVersion,getHtmlNotificationStatus:getHtmlNotificationStatus,setHtmlNotificationStatus:setHtmlNotificationStatus,getHtmlNotificationSoundStatus:getHtmlNotificationSoundStatus,setHtmlNotificationSoundStatus:setHtmlNotificationSoundStatus,getTurtleTimes:getTurtleTimes,setTurtleTimes:setTurtleTimes,getTimeBeforeNotification:getTimeBeforeNotification,setTimeBeforeNotification:setTimeBeforeNotification,getRegistrationId:getRegistrationId,setRegistrationId:setRegistrationId,getDetailedHourStatus:getDetailedHourStatus,setDetailedHourStatus:setDetailedHourStatus,getLocale:getLocale,setLocale:setLocale,getPassword:getPassword,setPassword:setPassword};return loadFromStorage(),services}angular.module("app").factory("userFactory",userFactory),userFactory.$inject=["localStorageService","$http","apiFactory","$translate"]}(),function(){"use strict";function navbarCtrl($state,$mdSidenav,$translate,$scope,userFactory,navbarFactory){function activate(){self.menu=[{link:"turtle",title:$translate.instant("NAV_TURTLE"),icon:"fa-home"},{link:"barrel",title:$translate.instant("NAV_BARREL"),icon:"fa-users"},{link:"events",title:$translate.instant("NAV_EVENT"),icon:"fa-calendar-o"},{link:"contact",title:$translate.instant("NAV_CONTACT"),icon:"fa-envelope"},{link:"settings",title:$translate.instant("NAV_SETTINGS"),icon:"fa-cogs"}]}var self=this;self.seo=navbarFactory.getSeo(),activate(),self.isSelected=function(title){return $state.current.hasOwnProperty("data")?(self.title=$translate.instant($state.current.data.title),title===self.title):!1},self.toggleSidenav=function(){$mdSidenav("left").toggle()},$scope.$watch(function(){return userFactory.getLocale()},function(){activate()})}angular.module("app").controller("NavbarCtrl",navbarCtrl),navbarCtrl.$inject=["$state","$mdSidenav","$translate","$scope","userFactory","navbarFactory"]}(),function(){"use strict";function navbarFactory(){function getSeo(){return seo}function setSeo(title,description){return seo.pageTitle=title,seo.description=description,seo}var services={getSeo:getSeo,setSeo:setSeo},seo={pageTitle:"Home",description:"Supplement app for One Piece Treasure Cruise to help calculate your turtle times and set notifications."};return services}angular.module("app").factory("navbarFactory",navbarFactory),navbarFactory.$inject=[]}(),function(){"use strict";function settingsCtrl(userFactory,navbarFactory){var self=this;self.languages=[{language:"English",abbrev:"en"},{language:"Deutsch",abbrev:"de"},{language:"Español",abbrev:"es"},{language:"français",abbrev:"fr"}],navbarFactory.setSeo("Settings","Adjust your language and customize your notification settings."),self.timeFormat=userFactory.getTimeFormat(),self.htmlNotificationSoundStatus=userFactory.getHtmlNotificationSoundStatus(),self.timeBeforeNotification=userFactory.getTimeBeforeNotification(),self.locale=userFactory.getLocale(),self.setTimeFormat=function(){userFactory.setTimeFormat(self.timeFormat)},self.setHtmlNotificationSoundStatus=function(){userFactory.setHtmlNotificationSoundStatus(self.htmlNotificationSoundStatus)},self.updateTimeBefereNotification=function(){userFactory.setTimeBeforeNotification(self.timeBeforeNotification)},self.updateLocale=function(){userFactory.setLocale(self.locale)}}angular.module("app").controller("SettingsCtrl",settingsCtrl),settingsCtrl.$inject=["userFactory","navbarFactory"]}(),function(){"use strict";function config($stateProvider,$urlRouterProvider,$locationProvider){$urlRouterProvider.otherwise("/turtle"),$stateProvider.state("turtle",{url:"/turtle",templateUrl:"turtle/turtle.html",controller:"TurtleCtrl",controllerAs:"turtle",data:{title:"NAV_TURTLE"}}).state("barrel",{url:"/barrel",templateUrl:"barrel/barrel.html",controller:"BarrelCtrl",controllerAs:"barrel",data:{title:"NAV_BARREL"}}).state("events",{url:"/events",templateUrl:"events/events.html",controller:"EventsCtrl",controllerAs:"events",data:{title:"NAV_EVENT"}}).state("contact",{url:"/contact",templateUrl:"contact/contact.html",controller:"ContactCtrl",controllerAs:"contact",data:{title:"NAV_CONTACT"}}).state("settings",{url:"/settings",templateUrl:"settings/settings.html",controller:"SettingsCtrl",controllerAs:"settings",data:{title:"NAV_SETTINGS"}}).state("admin",{url:"/admin",templateUrl:"admin/admin.html",controller:"AdminCtrl",controllerAs:"admin",data:{title:"Admin"}}),$locationProvider.hashPrefix("!")}angular.module("app").config(config),config.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"]}();
//# sourceMappingURL=data:application/json;base64,
