angular.module("app",["ui.router","ngMaterial","ngMdIcons","LocalStorageModule","md.data.table","pascalprecht.translate"]),function(){"use strict";function AdminCtrl(adminFactory){function activate(){adminFactory.getTurtleDates(function(err,globalDates,japanDates){return err?void console.log("err =",err):(self.globalDates=globalDates,void(self.japanDates=japanDates))})}var self=this;self.globalDates=[],self.japanDates=[],self.globalSelected=[],self.japanSelected=[],activate(),self.addBoth=function(){self.addDate("global"),self.addDate("japan")},self.addDate=function(version){var date=self.turtleDate.toISOString().slice(0,10);adminFactory.addTurtleDate(date,version,function(err){return err?void console.log("err =",err):(console.log("Added turtle date"),void activate())})},self.removeSelectedDates=function(){var dates=self.globalSelected.map(function(date){return{turtleDate:date,version:"global"}}).concat(self.japanSelected.map(function(date){return{turtleDate:date,version:"japan"}}));adminFactory.removeTurtleDates(dates,function(err){return err?void console.log("err =",err):void activate()})},self.removePastDates=function(){function getPastDates(version){var oldDates="global"===version?self.globalDates.slice().reverse():self.japanDates.slice().reverse(),oldDates=oldDates.filter(function(date){return moment.utc(date).add(1,"days").isBefore(moment.utc())}).map(function(date){return{turtleDate:date,version:version}});return oldDates=oldDates.slice(0,5*Math.floor(oldDates.length/5))}var oldDates=getPastDates("global").concat(getPastDates("japan"));console.log("oldDates =",oldDates),adminFactory.removeTurtleDates(oldDates,function(err){return err?void console.log("err =",err):(console.log("removed old dates"),void activate())})},self.addQuarter=function(){adminFactory.addQuarter(function(err){err&&console.log("err =",err),activate()})}}angular.module("app").controller("AdminCtrl",AdminCtrl),AdminCtrl.$inject=["adminFactory"]}(),function(){"use strict";function adminFactory($http,apiFactory){function getTurtleDates(cb){$http.get(apiFactory.getBaseUrl()+"/api/turtle/date").then(function(response){for(var globalDates=[],japanDates=[],i=0;i<response.data.length;i++)"global"===response.data[i].version?globalDates.push(response.data[i].turtleDate):japanDates.push(response.data[i].turtleDate);cb(null,globalDates,japanDates)})["catch"](function(){console.log("unable to get turtle dates")})}function addQuarter(cb){function addDateToArray(arr,turtleDate,version){arr.push({turtleDate:turtleDate,version:version})}for(var NUM_WEEKS=13,dates=[],start=moment.utc().startOf("isoWeek"),i=0;NUM_WEEKS>i;i++)addDateToArray(dates,start.format("YYYY-MM-DD"),"global"),addDateToArray(dates,start.format("YYYY-MM-DD"),"japan"),start.add("4","days"),addDateToArray(dates,start.format("YYYY-MM-DD"),"japan"),start.add("3","days");console.log("dates =",dates),addTurtleDates(dates,cb)}function addTurtleDates(dates,cb){for(var runCount=0,i=0;i<dates.length;i++)addTurtleDate(dates[i].turtleDate,dates[i].version,function(err){err&&console.log("err =",err),++runCount===dates.length&&cb()})}function addTurtleDate(dateString,version,cb){var turtleDate=convertToUTC(dateString);$http.post(apiFactory.getBaseUrl()+"/api/turtle/date",{turtleDate:turtleDate,version:version}).then(function(){cb(null)})["catch"](function(){cb("Unable to send message")})}function removeTurtleDates(dates,cb){dates=dates.map(function(date){return{turtleDate:convertToUTC(date.turtleDate),version:date.version}});for(var runCount=0,i=0;i<dates.length;i++)removeTurtleDate(dates[i],function(err){err&&console.log("err =",err),++runCount===dates.length&&cb()})}function removeTurtleDate(turtleDate,cb){var params={params:turtleDate};$http["delete"](apiFactory.getBaseUrl()+"/api/turtle/date",params).then(function(){cb(null)})["catch"](function(){cb("Unable to delete "+params.turtleDate)})}function convertToUTC(dateString){return moment.utc(dateString).format("x")}var services={addTurtleDate:addTurtleDate,addTurtleDates:addTurtleDates,removeTurtleDates:removeTurtleDates,getTurtleDates:getTurtleDates,addQuarter:addQuarter};return services}angular.module("app").factory("adminFactory",adminFactory),adminFactory.$inject=["$http","apiFactory"]}(),function(){"use strict";function barrelCtrl($mdMedia,userFactory,barrelFactory){function setParams(){self.version=userFactory.getVersion(),self.barrelTimes=barrelFactory.getBarrelTimes(),self.format=userFactory.getDetailedHourStatus()}var self=this;setParams(),self.updateVersion=function(){userFactory.setVersion(self.version),self.barrelTimes=barrelFactory.getBarrelTimes()},self.isLargeScreen=function(){return $mdMedia("gt-md")},self.showHours=function(){userFactory.setDetailedHourStatus(self.format)}}angular.module("app").controller("BarrelCtrl",barrelCtrl),barrelCtrl.$inject=["$mdMedia","userFactory","barrelFactory"]}(),function(){"use strict";function barrelFactory(userFactory){function getBarrelTimes(){function getTime(dayNum){var startOfDay=start.clone().add(dayNum,"days"),wood=[0,5,4,9,3,8,4,9,2,7,3,8,1,6,2,7,0,5,1,6],silver=[1,6,2,7,0,5,1,6,0,5,4,9,3,8,4,9,2,7,3,8],gold=[3,8,2,7,1,6,0,5,4,9],offset=dayNum+dayOfYear+4,index1=4*offset%20,index2=2*offset%10,woodDigits=wood.slice(index1,index1+4),silverDigits=silver.slice(index1,index1+4),goldDigits=gold.slice(index2,index2+2),date=startOfDay.format("YYYY-MM-DD");return{date:date,woodDigits:woodDigits,silverDigits:silverDigits,goldDigits:goldDigits,hourDisplay:hourDisplay}}for(var version=userFactory.getVersion(),NUM_DAYS=5,barrelTimes=[],data=getStartEndTimes(version),start=data.start,end=data.end,hourDisplay=start.clone().local().format("HH:mm")+"-"+end.clone().local().format("HH:mm"),dayOfYear=start.dayOfYear(),i=0;NUM_DAYS>i;i++)barrelTimes.push(getTime(i));return barrelTimes}function getStartEndTimes(version){var now=moment(),hourOffset="global"===version?12:6,start=moment.utc().startOf("day").add(hourOffset,"hours"),end=start.clone().add(23,"hours").add(59,"minutes");return now.isAfter(end)&&(start.add(1,"day"),end.add(1,"day")),{start:start,end:end}}var services={getBarrelTimes:getBarrelTimes};return services}angular.module("app").factory("barrelFactory",barrelFactory),barrelFactory.$inject=["userFactory"]}(),angular.module("app").config(function($translateProvider){$translateProvider.translations("en",{NAV_TURTLE:"Turtle Time",NAV_BARREL:"Barrel Breaking",NAV_EVENT:"Event",NAV_CONTACT:"Contact Me",NAV_SETTINGS:"Settings",TT_TITLE:"Turtle Time Calculator",TT_DIGIT:"6th digit of ID",TT_FORMAT:"Time Format",TT_STANDARD:"Standard",TT_MILITARY:"24hr format",TT_TIMEZONE:"Time Zone:",TT_SEEMORE:"See More",TT_ADD_CALENDAR:"Add to Calendar",TT_NOTIFICATION:"Chrome/Android Notifications",TT_HTML_NOTIFICATION:"HTML Notifications",TT_NOTIF_TEST:"Example Chrome/Android Notification",TT_HTML_NOTIF_TEST:"Example HTML Notification",TT_NOTIF_MINUTES:"Minutes before event",TT_MINUTES:"Minutes",TT_NOTIF_SOUND:"Play sound",TT_NOTIF_EXAMPLE:"Example",BB_TITLE:"Barrel Breaking",BB_TIME:"Time till next rotation:",BB_ALT:"Show Hours",BB_DATE:"Date",BB_WOODEN:"Wooden",BB_SILVER:"Silver",BB_GOLD:"Gold"}).translations("de",{NAV_TURTLE:"Turtle Zeiten",NAV_BARREL:"Friend Game",NAV_EVENT:"Ereignis",NAV_CONTACT:"Kontaktiere Mich",NAV_SETTINGS:"Einstellungen",TT_TITLE:"Turtle Zeiten Rechner",TT_DIGIT:"6te Ziffer der ID",TT_FORMAT:"Zeitformat",TT_STANDARD:"Standard",TT_MILITARY:"24-Stunden",TT_TIMEZONE:"Zeitzone:",TT_SEEMORE:"siehe mehr",TT_ADD_CALENDAR:"Zum Kalender hinzufügen",TT_NOTIFICATION:"Chrome/Android Benachrichtigung",TT_HTML_NOTIFICATION:"HTML Benachrichtigung",TT_NOTIF_TEST:"Beispiel Chrome/Android Benachrichtigung",TT_HTML_NOTIF_TEST:"Beispiel HTML Benachrichtigung",TT_NOTIF_MINUTES:"HTML-Benachrichtigung",TT_MINUTES:"Minuten",TT_NOTIF_SOUND:"Ton abspielen",TT_NOTIF_EXAMPLE:"Beispiel",BB_TITLE:"Barrel Breaking",BB_TIME:"Zeit bis zum nächsten Wechsel:",BB_ALT:"Anzeige Stunden",BB_DATE:"Datum",BB_WOODEN:"Holz",BB_SILVER:"Silber",BB_GOLD:"Gold"}).translations("es",{NAV_TURTLE:"Horario Tortugas",NAV_BARREL:"Friend Game",NAV_EVENT:"Evento",NAV_CONTACT:"Contáctame",NAV_SETTINGS:"Configuración",TT_TITLE:"Horario Tortugas Calculadora",TT_DIGIT:"6th dígito de ID",TT_FORMAT:"formato de tiempo",TT_STANDARD:"estándar",TT_MILITARY:"24 horas",TT_TIMEZONE:"Zona Horaria:",TT_SEEMORE:"ver más",TT_ADD_CALENDAR:"Añadir al calendario",TT_NOTIFICATION:"Notificaciones de Chrome/Android",TT_HTML_NOTIFICATION:"Notificaciones de HTML",TT_NOTIF_TEST:"Test Chrome/Android Notification",TT_HTML_NOTIF_TEST:"Test HTML Notification",TT_NOTIF_MINUTES:"Minutos antes de evento",TT_MINUTES:"Minutos",TT_NOTIF_SOUND:"Reproducir sonido",TT_NOTIF_EXAMPLE:"Ejemplo",BB_TITLE:"Friend Game",BB_TIME:"Tiempo hasta la próxima rotación:",BB_ALT:"Mostrar las horas",BB_DATE:"Fecha",BB_WOODEN:"Madera",BB_SILVER:"Plata",BB_GOLD:"Oro"}).translations("fr",{NAV_TURTLE:"Horaires des Tortues",NAV_BARREL:"Partie d'amis",NAV_EVENT:"Event",NAV_CONTACT:"Me Contacter",NAV_SETTINGS:"Réglages",TT_TITLE:"Calculateur de l'Horaire des Tortues",TT_DIGIT:"6eme chiffre ID",TT_FORMAT:"format de l'heure",TT_STANDARD:"normale",TT_MILITARY:"24h",TT_TIMEZONE:"Fuseau Horaire:",TT_SEEMORE:"Lire la suite",TT_ADD_CALENDAR:"Ajouter au Calendrier",TT_NOTIFICATION:"Notifications Google/Android",TT_HTML_NOTIFICATION:"Notifications HTML",TT_NOTIF_TEST:"Test Chrome/Android Notification",TT_HTML_NOTIF_TEST:"Test HTML Notification",TT_NOTIF_MINUTES:"Temps Restant avant Event",TT_MINUTES:"Minutes",TT_NOTIF_SOUND:"Jouer le son",TT_NOTIF_EXAMPLE:"Exemple",BB_TITLE:"Éclatement du Tonneau",BB_TIME:"Temps jusqu'à la Prochaine Rotation:",BB_ALT:"Afficher les Heures",BB_DATE:"Date",BB_WOODEN:"Bois",BB_SILVER:"Argent",BB_GOLD:"Or"}),$translateProvider.preferredLanguage("en"),$translateProvider.useSanitizeValueStrategy("escaped")}),function(){"use strict";function contactCtrl($http,apiFactory){var self=this;self.subjects=["Incorrect Turtle Time","Report a bug","Other"],self.message={},self.isTurtleBug=function(){return void 0===self.message.subject?!1:"Incorrect Turtle Time"===self.message.subject},self.sendMessage=function(){self.status="Sending...",$http.post(apiFactory.getBaseUrl()+"/contact",self.message).then(function(){self.status="Sent!"})["catch"](function(){self.status="Error sending. Please try again later."})}}angular.module("app").controller("ContactCtrl",contactCtrl),contactCtrl.$inject=["$http","apiFactory"]}(),function(){"use strict";function eventsCtrl($mdMedia,userFactory,eventsFactory){function setParams(){self.version=userFactory.getVersion(),self.eventTimes=eventsFactory.getEventTimes(),self.format=userFactory.getDetailedHourStatus()}var self=this;setParams(),self.updateVersion=function(){userFactory.setVersion(self.version),self.eventTimes=eventsFactory.getEventTimes()},self.isLargeScreen=function(){return $mdMedia("gt-md")},self.showHours=function(){userFactory.setDetailedHourStatus(self.format)}}angular.module("app").controller("EventsCtrl",eventsCtrl),eventsCtrl.$inject=["$mdMedia","userFactory","eventsFactory"]}(),function(){"use strict";function eventsFactory(userFactory){function getEventTimes(){function getTime(dayNum){var offset=dayNum+dayOfYear+3;offset%=7;var drop=dropTable[offset].split(","),stamina=staminaTable[offset].split(","),beli=beliTable[offset].split(","),startDate=start.clone().add(dayNum,"days"),hourOffset="global"===version?23:11,end=startDate.clone().add(hourOffset,"hours").add(59,"minutes"),date=startDate.format("YYYY-MM-DD"),hourString=startDate.format("HH:mm")+"-"+end.format("HH:mm");return{date:date,hourDisplay:hourString,drop:drop,stamina:stamina,beli:beli}}for(var version=userFactory.getVersion(),NUM_DAYS=5,dropTable=["Loguetown, Jaya","Arlong Park, Alubarna","Baratie, Nanohana Rainbase","Syrup Village, Drum Island","Orange Town, Little Garden","Shell Town, Whiskey Peak, Ark Maxim","Alvida's Hideout, Twin Cape, Skypia"],staminaTable=["Orange Town, Drum Island","Shell Town, Little Garden","Alvida's Hideout, Whiskey Peak, Ark Maxim","Fuschia Village, Twin Cape, Skypia","Loguetown, Jaya","Arlong Park, Alubarna","Baratie, Nanohana Rainbase"],beliTable=["Baratie, Whiskey Peak, Ark Maxim","Syrup Village, Twin Cape, Skypia","Loguetown, Jaya","Arlong Park, Alubarna","Baratie, Nanohana Rainbase","Syrup Village, Drum Island","Little Garden"],start=getStartTime(version),dayOfYear=start.dayOfYear(),eventTimes=[],i=0;NUM_DAYS>i;i++)eventTimes.push(getTime(i));return eventTimes}function getStartTime(version){var hourOffset="global"===version?8:2,start=moment.utc().startOf("day").add(hourOffset,"hours"),now=moment();return now.isAfter(start)&&start.subtract(1,"day"),start}var services={getEventTimes:getEventTimes};return services}angular.module("app").factory("eventsFactory",eventsFactory),eventsFactory.$inject=["userFactory"]}(),function(){"use strict";function navbarCtrl($state,$mdSidenav,$translate){var self=this;self.menu=[{link:"turtle",title:$translate.instant("NAV_TURTLE"),icon:"home"},{link:"barrel",title:$translate.instant("NAV_BARREL"),icon:"stars"},{link:"events",title:$translate.instant("NAV_EVENT"),icon:"event"},{link:"contact",title:$translate.instant("NAV_CONTACT"),icon:"email"},{link:"settings",title:$translate.instant("NAV_SETTINGS"),icon:"settings"}],self.isSelected=function(title){return $state.current.hasOwnProperty("data")?(self.title=$translate.instant($state.current.data.title),title===self.title):!1},self.toggleSidenav=function(){$mdSidenav("left").toggle()}}angular.module("app").controller("NavbarCtrl",navbarCtrl),navbarCtrl.$inject=["$state","$mdSidenav","$translate"]}(),function(){"use strict";function settingsCtrl(userFactory){var self=this;self.languages=[{language:"English",abbrev:"en"},{language:"Deutsche",abbrev:"de"},{language:"Español",abbrev:"es"},{language:"français",abbrev:"fr"}],self.timeFormat=userFactory.getTimeFormat(),self.htmlNotificationSoundStatus=userFactory.getHtmlNotificationSoundStatus(),self.timeBeforeNotification=userFactory.getTimeBeforeNotification(),self.locale=userFactory.getLocale(),self.setTimeFormat=function(){userFactory.setTimeFormat(self.timeFormat)},self.setHtmlNotificationSoundStatus=function(){userFactory.setHtmlNotificationSoundStatus(self.htmlNotificationSoundStatus)},self.updateTimeBefereNotification=function(){userFactory.setTimeBeforeNotification(self.timeBeforeNotification)},self.updateLocale=function(){userFactory.setLocale(self.locale)}}angular.module("app").controller("SettingsCtrl",settingsCtrl),settingsCtrl.$inject=["userFactory"]}(),function(){"use strict";function apiFactory(){function getBaseUrl(){return"localhost"==document.location.hostname?"http://localhost:3000":"https://optctimer.com"}var services={getBaseUrl:getBaseUrl};return services}angular.module("app").factory("apiFactory",apiFactory),apiFactory.$inject=[]}(),function(){"use strict";function calendarFactory(userFactory){function getCalendar(){for(var begin,end,now=moment(),turtleTimes=userFactory.getTurtleTimes().filter(function(turtleTime){return now.isBefore(turtleTime)}),cal=ics(),subject="OPTC Turtle Time",description="One Piece Treasure Cruise Turtle Time",location="OPTC",i=0;4>i;i++)begin=turtleTimes[i].format(),end=turtleTimes[i].clone().add(30,"minutes").format(),cal.addEvent(subject,description,location,begin,end);cal.download("turtle_times",".ics")}var services={getCalendar:getCalendar};return services}angular.module("app").factory("calendarFactory",calendarFactory),calendarFactory.$inject=["userFactory"]}(),function(){"use strict";function htmlNotificationFactory(userFactory){function isEnabled(){var mobileAndTabletCheck=(/iPad|iPhone|iPod/.test(navigator.userAgent),function(){var check=!1;return function(a){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))&&(check=!0)}(navigator.userAgent||navigator.vendor||window.opera),check});return"Notification"in window&&!mobileAndTabletCheck()?(Notification.requestPermission(),!0):!1}function setNotifications(){for(var timeUntil,turtleTimes=userFactory.getTurtleTimes(),soundEnabled=userFactory.getHtmlNotificationSoundStatus(),now=moment(),minutes=userFactory.getTimeBeforeNotification(),options={body:minutes+" minutes till Turtle Time!",icon:"favicon.ico"},end=moment().add(3,"days"),i=0;i<turtleTimes.length;i++)now.isAfter(turtleTimes[i])||turtleTimes[i].isAfter(end)||(timeUntil=turtleTimes[i].format("x")-now.format("x"),timeUntil-=1e3*minutes,0>timeUntil||isNaN(timeUntil)||(void 0!==notifications[i]&&clearTimeout(notifications[i]),notifications[i]=setTimeout(function(){new Notification("OPTC Turtle Time",options);soundEnabled&&sound.play()},timeUntil)))}function playExample(){var minutes=userFactory.getTimeBeforeNotification(),soundEnabled=userFactory.getHtmlNotificationSoundStatus(),options={body:minutes+" minutes till Turtle Time!",icon:"../images/flag.png"};new Notification("OPTC Turtle Time",options);soundEnabled&&sound.play()}var services={isEnabled:isEnabled,setNotifications:setNotifications,playExample:playExample},notifications=[],sound=new Audio("sounds/notification.mp3");return services}angular.module("app").factory("htmlNotificationFactory",htmlNotificationFactory),htmlNotificationFactory.$inject=["userFactory"]}(),function(){"use strict";function notificationFactory($http,userFactory,apiFactory){function isEnabled(){return"serviceWorker"in navigator}function attachWorker(){return new Promise(function(resolve,reject){isEnabled()?navigator.serviceWorker.register("service-worker.js").then(function(){return navigator.serviceWorker.ready}).then(function(serviceWorkerRegistration){reg=serviceWorkerRegistration,console.log("Service Worker is ready."),resolve()})["catch"](function(err){console.log("Service Worker Error."),reject(err)}):reject("service workers not supported")})}function subscribe(cb){function aux(){reg.pushManager.getSubscription().then(function(pushSubscription){return pushSubscription?(sub=pushSubscription,sendSubscriptionToServer(),cb(null)):void reg.pushManager.subscribe({userVisibleOnly:!0}).then(function(pushSubscription){sub=pushSubscription,console.log("endpoint =",sub.endpoint),console.log("Subscribed."),sendSubscriptionToServer(),cb(null)})["catch"](function(err){console.log("Unable to subscribe."),cb(err)})})}reg?aux():attachWorker().then(function(){aux()})["catch"](function(err){console.log(err)})}function unsubscribe(cb){sub.unsubscribe().then(function(event){console.log("Unsubscribed.",event),cb(null)})["catch"](function(err){console.log("Error unsubscribing."),cb(err)})}function sendSubscriptionToServer(){var endpoint=sub.endpoint;if(endpoint.match(/^https:\/\/android\.googleapis\.com\/gcm\/send/)){var registrationId=endpoint.match(/(?:.*?)send\/(.*)$/)[1];endpoint="https://android.googleapis.com/gcm/send",userFactory.setRegistrationId(registrationId)}}function playExample(){var data={registrationIds:[userFactory.getRegistrationId()]};console.log("data =",data),$http.post(apiFactory.getBaseUrl()+"/api/gcm",data).then(function(){console.log("sent to server")})["catch"](function(){console.log("error posting to server")})}var reg,sub,services={isEnabled:isEnabled,subscribe:subscribe,unsubscribe:unsubscribe,playExample:playExample};return services}angular.module("app").factory("notificationFactory",notificationFactory),notificationFactory.$inject=["$http","userFactory","apiFactory"]}(),function(){"use strict";function timeFactory($http,userFactory,apiFactory){function getTurtleTimes(cb){var params={params:{digit:userFactory.getDigit(),timeFormat:userFactory.getTimeFormat(),version:userFactory.getVersion(),numOfDays:3}};$http.get(apiFactory.getBaseUrl()+"/api/turtle",params).then(function(response){userFactory.setTurtleTimes(response.data.map(function(time){return moment.utc(time)}));var turtleTimes=getFormattedTimes(response.data);cb(null,turtleTimes)})["catch"](function(err){cb(err)})}function getFormattedTimes(turtleTimes){var timeFormat=userFactory.getTimeFormat();return turtleTimes.map(function(timeStr){var time,date,turtleTime=moment.utc(timeStr);return"standard"===timeFormat?time=turtleTime.local().format("h:mm a"):"military"===timeFormat&&(time=turtleTime.local().format("HH:mm")),date=turtleTime.local().format("LL"),{time:time,date:date}})}var services={getTurtleTimes:getTurtleTimes};return services}angular.module("app").factory("timeFactory",timeFactory),timeFactory.$inject=["$http","userFactory","apiFactory"]}(),function(){"use strict";function turtleCtrl($scope,userFactory,timeFactory,notificationFactory,htmlNotificationFactory,calendarFactory){function setParams(){self.timezone=userFactory.getTimeZone(),self.digit=userFactory.getDigit(),self.version=userFactory.getVersion(),self.turtleTimes=[],self.notificationStatus=!0,self.htmlNotificationStatus=userFactory.getHtmlNotificationStatus(),self.notificationEnabled=notificationFactory.isEnabled(),self.htmlNotificationEnabled=htmlNotificationFactory.isEnabled(),getTurtleTimes(),toggleNotification()}function toggleNotification(){self.notificationStatus?notificationFactory.subscribe(function(err){return err?(self.notificationStatus=!1,void console.log(err)):void console.log("subscribed")}):notificationFactory.unsubscribe(function(err){return err?(console.log(err),void(self.notificationStatus=!0)):void console.log("unsubscribed")})}function getTurtleTimes(){timeFactory.getTurtleTimes(function(err,turtleTimes){return err?void console.log("unable to retrieve times"):void(self.turtleTimes=turtleTimes)})}var self=this;setParams(),self.toggleNotification=function(){toggleNotification()},self.updateDigit=function(){userFactory.setDigit(self.digit),getTurtleTimes()},self.updateVersion=function(){userFactory.setVersion(self.version),getTurtleTimes()},self.updateHtmlNotificationStatus=function(){userFactory.setHtmlNotificationStatus(self.htmlNotificationStatus),htmlNotificationFactory.setNotifications()},self.playExampleNotification=function(){notificationFactory.playExample()},self.playExampleHtmlNotification=function(){htmlNotificationFactory.playExample()},self.getCalendar=function(){calendarFactory.getCalendar()}}angular.module("app").controller("TurtleCtrl",turtleCtrl),turtleCtrl.$inject=["$scope","userFactory","timeFactory","notificationFactory","htmlNotificationFactory","calendarFactory"]}(),function(){"use strict";function userFactory(localStorageService,$http,apiFactory,$translate){function loadFromStorage(){digit=localStorageService.get("digit")||0,timeFormat=localStorageService.get("timeFormat")||"standard",version=localStorageService.get("version")||"global",htmlNotificationStatus=localStorageService.get("htmlNotificationStatus")||!1,htmlNotificationSoundStatus=localStorageService.get("htmlNotificationSoundStatus")||!1,timeBeforeNotification=localStorageService.get("timeBeforeNotification")||10,detailedHourStatus=localStorageService.get("detailedHourStatus")||!1,locale=localStorageService.get("locale")||"en",$translate.use(locale),moment.locale(locale)}function postUserData(){var data={digit:digit%5,registrationId:registrationId,timeBefore:timeBeforeNotification};$http.post(apiFactory.getBaseUrl()+"/api/users",data).then(function(){console.log("posted subscription to server")})["catch"](function(){console.log("error posting subscription to server")})}function getTimeZone(){return jstz.determine().name()}function getDigit(){return digit}function setDigit(d){digit=d%5,localStorageService.set("digit",d),postUserData()}function getTimeFormat(){return timeFormat}function setTimeFormat(tf){timeFormat=tf,localStorageService.set("timeFormat",tf)}function getVersion(){return version}function setVersion(v){version=v,localStorageService.set("version",v)}function getHtmlNotificationStatus(){return htmlNotificationStatus}function setHtmlNotificationStatus(h){htmlNotificationStatus=h,localStorageService.set("htmlNotificationStatus",h)}function getTurtleTimes(){return turtleTimes}function setTurtleTimes(tt){turtleTimes=tt}function getHtmlNotificationSoundStatus(){return htmlNotificationSoundStatus}function setHtmlNotificationSoundStatus(s){htmlNotificationSoundStatus=s,localStorageService.set("htmlNotificationSoundStatus",s)}function getTimeBeforeNotification(){return timeBeforeNotification}function setTimeBeforeNotification(t){timeBeforeNotification=t,localStorageService.set("timeBeforeNotification",t),postUserData()}function getRegistrationId(){return registrationId}function setRegistrationId(r){registrationId=r,postUserData()}function getDetailedHourStatus(){return detailedHourStatus}function setDetailedHourStatus(d){detailedHourStatus=d,localStorageService.set("detailedHourStatus",d)}function getLocale(){return locale}function setLocale(l){locale=l,localStorageService.set("locale",l),$translate.use(l),moment.locale(locale)}var digit,timeFormat,version,htmlNotificationStatus,htmlNotificationSoundStatus,turtleTimes,timeBeforeNotification,registrationId,detailedHourStatus,locale,services={getTimeZone:getTimeZone,getDigit:getDigit,setDigit:setDigit,getTimeFormat:getTimeFormat,setTimeFormat:setTimeFormat,getVersion:getVersion,setVersion:setVersion,getHtmlNotificationStatus:getHtmlNotificationStatus,setHtmlNotificationStatus:setHtmlNotificationStatus,getHtmlNotificationSoundStatus:getHtmlNotificationSoundStatus,setHtmlNotificationSoundStatus:setHtmlNotificationSoundStatus,getTurtleTimes:getTurtleTimes,setTurtleTimes:setTurtleTimes,getTimeBeforeNotification:getTimeBeforeNotification,setTimeBeforeNotification:setTimeBeforeNotification,getRegistrationId:getRegistrationId,setRegistrationId:setRegistrationId,getDetailedHourStatus:getDetailedHourStatus,setDetailedHourStatus:setDetailedHourStatus,getLocale:getLocale,setLocale:setLocale};return loadFromStorage(),services}angular.module("app").factory("userFactory",userFactory),userFactory.$inject=["localStorageService","$http","apiFactory","$translate"]}(),function(){"use strict";function config($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/turtle"),$stateProvider.state("turtle",{url:"/turtle",templateUrl:"turtle/turtle.html",controller:"TurtleCtrl",controllerAs:"turtle",data:{title:"NAV_TURTLE"}}).state("barrel",{url:"/barrel",templateUrl:"barrel/barrel.html",controller:"BarrelCtrl",controllerAs:"barrel",data:{title:"NAV_BARREL"}}).state("events",{url:"/events",templateUrl:"events/events.html",controller:"EventsCtrl",controllerAs:"events",data:{title:"NAV_EVENT"}}).state("contact",{url:"/contact",templateUrl:"contact/contact.html",controller:"ContactCtrl",controllerAs:"contact",data:{title:"NAV_CONTACT"}}).state("settings",{url:"/settings",templateUrl:"settings/settings.html",controller:"SettingsCtrl",controllerAs:"settings",data:{title:"NAV_SETTINGS"}}).state("admin",{url:"/admin",templateUrl:"admin/admin.html",controller:"AdminCtrl",controllerAs:"admin",data:{title:"Admin"}})}angular.module("app").config(config),config.$inject=["$stateProvider","$urlRouterProvider"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFkbWluQ3RybC5qcyIsImFkbWluRmFjdG9yeS5qcyIsImJhcnJlbEN0cmwuanMiLCJiYXJyZWxGYWN0b3J5LmpzIiwibG9jYWxpemVDb25maWcuanMiLCJjb250YWN0Q3RybC5qcyIsImV2ZW50c0N0cmwuanMiLCJldmVudHNGYWN0b3J5LmpzIiwibmF2YmFyQ3RybC5qcyIsInNldHRpbmdzQ3RybC5qcyIsImFwaUZhY3RvcnkuanMiLCJjYWxlbmRhckZhY3RvcnkuanMiLCJodG1sTm90aWZpY2F0aW9uRmFjdG9yeS5qcyIsIm5vdGlmaWNhdGlvbkZhY3RvcnkuanMiLCJ0aW1lRmFjdG9yeS5qcyIsInR1cnRsZUN0cmwuanMiLCJ1c2VyRmFjdG9yeS5qcyIsInJvdXRlLWNvbmZpZy5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiQWRtaW5DdHJsIiwiYWRtaW5GYWN0b3J5IiwiYWN0aXZhdGUiLCJnZXRUdXJ0bGVEYXRlcyIsImVyciIsImdsb2JhbERhdGVzIiwiamFwYW5EYXRlcyIsImNvbnNvbGUiLCJsb2ciLCJzZWxmIiwidGhpcyIsImdsb2JhbFNlbGVjdGVkIiwiamFwYW5TZWxlY3RlZCIsImFkZEJvdGgiLCJhZGREYXRlIiwidmVyc2lvbiIsImRhdGUiLCJ0dXJ0bGVEYXRlIiwidG9JU09TdHJpbmciLCJzbGljZSIsImFkZFR1cnRsZURhdGUiLCJyZW1vdmVTZWxlY3RlZERhdGVzIiwiZGF0ZXMiLCJtYXAiLCJjb25jYXQiLCJyZW1vdmVUdXJ0bGVEYXRlcyIsInJlbW92ZVBhc3REYXRlcyIsImdldFBhc3REYXRlcyIsIm9sZERhdGVzIiwicmV2ZXJzZSIsImZpbHRlciIsIm1vbWVudCIsInV0YyIsImFkZCIsImlzQmVmb3JlIiwiTWF0aCIsImZsb29yIiwibGVuZ3RoIiwiYWRkUXVhcnRlciIsImNvbnRyb2xsZXIiLCIkaW5qZWN0IiwiJGh0dHAiLCJhcGlGYWN0b3J5IiwiY2IiLCJnZXQiLCJnZXRCYXNlVXJsIiwidGhlbiIsInJlc3BvbnNlIiwiaSIsImRhdGEiLCJwdXNoIiwiYWRkRGF0ZVRvQXJyYXkiLCJhcnIiLCJOVU1fV0VFS1MiLCJzdGFydCIsInN0YXJ0T2YiLCJmb3JtYXQiLCJhZGRUdXJ0bGVEYXRlcyIsInJ1bkNvdW50IiwiZGF0ZVN0cmluZyIsImNvbnZlcnRUb1VUQyIsInBvc3QiLCJyZW1vdmVUdXJ0bGVEYXRlIiwicGFyYW1zIiwic2VydmljZXMiLCJmYWN0b3J5IiwiYmFycmVsQ3RybCIsIiRtZE1lZGlhIiwidXNlckZhY3RvcnkiLCJiYXJyZWxGYWN0b3J5Iiwic2V0UGFyYW1zIiwiZ2V0VmVyc2lvbiIsImJhcnJlbFRpbWVzIiwiZ2V0QmFycmVsVGltZXMiLCJnZXREZXRhaWxlZEhvdXJTdGF0dXMiLCJ1cGRhdGVWZXJzaW9uIiwic2V0VmVyc2lvbiIsImlzTGFyZ2VTY3JlZW4iLCJzaG93SG91cnMiLCJzZXREZXRhaWxlZEhvdXJTdGF0dXMiLCJnZXRUaW1lIiwiZGF5TnVtIiwic3RhcnRPZkRheSIsImNsb25lIiwid29vZCIsInNpbHZlciIsImdvbGQiLCJvZmZzZXQiLCJkYXlPZlllYXIiLCJpbmRleDEiLCJpbmRleDIiLCJ3b29kRGlnaXRzIiwic2lsdmVyRGlnaXRzIiwiZ29sZERpZ2l0cyIsImhvdXJEaXNwbGF5IiwiTlVNX0RBWVMiLCJnZXRTdGFydEVuZFRpbWVzIiwiZW5kIiwibG9jYWwiLCJub3ciLCJob3VyT2Zmc2V0IiwiaXNBZnRlciIsImNvbmZpZyIsIiR0cmFuc2xhdGVQcm92aWRlciIsInRyYW5zbGF0aW9ucyIsIk5BVl9UVVJUTEUiLCJOQVZfQkFSUkVMIiwiTkFWX0VWRU5UIiwiTkFWX0NPTlRBQ1QiLCJOQVZfU0VUVElOR1MiLCJUVF9USVRMRSIsIlRUX0RJR0lUIiwiVFRfRk9STUFUIiwiVFRfU1RBTkRBUkQiLCJUVF9NSUxJVEFSWSIsIlRUX1RJTUVaT05FIiwiVFRfU0VFTU9SRSIsIlRUX0FERF9DQUxFTkRBUiIsIlRUX05PVElGSUNBVElPTiIsIlRUX0hUTUxfTk9USUZJQ0FUSU9OIiwiVFRfTk9USUZfVEVTVCIsIlRUX0hUTUxfTk9USUZfVEVTVCIsIlRUX05PVElGX01JTlVURVMiLCJUVF9NSU5VVEVTIiwiVFRfTk9USUZfU09VTkQiLCJUVF9OT1RJRl9FWEFNUExFIiwiQkJfVElUTEUiLCJCQl9USU1FIiwiQkJfQUxUIiwiQkJfREFURSIsIkJCX1dPT0RFTiIsIkJCX1NJTFZFUiIsIkJCX0dPTEQiLCJwcmVmZXJyZWRMYW5ndWFnZSIsInVzZVNhbml0aXplVmFsdWVTdHJhdGVneSIsImNvbnRhY3RDdHJsIiwic3ViamVjdHMiLCJtZXNzYWdlIiwiaXNUdXJ0bGVCdWciLCJ1bmRlZmluZWQiLCJzdWJqZWN0Iiwic2VuZE1lc3NhZ2UiLCJzdGF0dXMiLCJldmVudHNDdHJsIiwiZXZlbnRzRmFjdG9yeSIsImV2ZW50VGltZXMiLCJnZXRFdmVudFRpbWVzIiwiZHJvcCIsImRyb3BUYWJsZSIsInNwbGl0Iiwic3RhbWluYSIsInN0YW1pbmFUYWJsZSIsImJlbGkiLCJiZWxpVGFibGUiLCJzdGFydERhdGUiLCJob3VyU3RyaW5nIiwiZ2V0U3RhcnRUaW1lIiwic3VidHJhY3QiLCJuYXZiYXJDdHJsIiwiJHN0YXRlIiwiJG1kU2lkZW5hdiIsIiR0cmFuc2xhdGUiLCJtZW51IiwibGluayIsInRpdGxlIiwiaW5zdGFudCIsImljb24iLCJpc1NlbGVjdGVkIiwiY3VycmVudCIsImhhc093blByb3BlcnR5IiwidG9nZ2xlU2lkZW5hdiIsInRvZ2dsZSIsInNldHRpbmdzQ3RybCIsImxhbmd1YWdlcyIsImxhbmd1YWdlIiwiYWJicmV2IiwidGltZUZvcm1hdCIsImdldFRpbWVGb3JtYXQiLCJodG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMiLCJnZXRIdG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMiLCJ0aW1lQmVmb3JlTm90aWZpY2F0aW9uIiwiZ2V0VGltZUJlZm9yZU5vdGlmaWNhdGlvbiIsImxvY2FsZSIsImdldExvY2FsZSIsInNldFRpbWVGb3JtYXQiLCJzZXRIdG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMiLCJ1cGRhdGVUaW1lQmVmZXJlTm90aWZpY2F0aW9uIiwic2V0VGltZUJlZm9yZU5vdGlmaWNhdGlvbiIsInVwZGF0ZUxvY2FsZSIsInNldExvY2FsZSIsImRvY3VtZW50IiwibG9jYXRpb24iLCJob3N0bmFtZSIsImNhbGVuZGFyRmFjdG9yeSIsImdldENhbGVuZGFyIiwiYmVnaW4iLCJ0dXJ0bGVUaW1lcyIsImdldFR1cnRsZVRpbWVzIiwidHVydGxlVGltZSIsImNhbCIsImljcyIsImRlc2NyaXB0aW9uIiwiYWRkRXZlbnQiLCJkb3dubG9hZCIsImh0bWxOb3RpZmljYXRpb25GYWN0b3J5IiwiaXNFbmFibGVkIiwibW9iaWxlQW5kVGFibGV0Q2hlY2siLCJ0ZXN0IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiY2hlY2siLCJhIiwic3Vic3RyIiwidmVuZG9yIiwid2luZG93Iiwib3BlcmEiLCJOb3RpZmljYXRpb24iLCJyZXF1ZXN0UGVybWlzc2lvbiIsInNldE5vdGlmaWNhdGlvbnMiLCJ0aW1lVW50aWwiLCJzb3VuZEVuYWJsZWQiLCJtaW51dGVzIiwib3B0aW9ucyIsImJvZHkiLCJpc05hTiIsIm5vdGlmaWNhdGlvbnMiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0Iiwic291bmQiLCJwbGF5IiwicGxheUV4YW1wbGUiLCJBdWRpbyIsIm5vdGlmaWNhdGlvbkZhY3RvcnkiLCJhdHRhY2hXb3JrZXIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInNlcnZpY2VXb3JrZXIiLCJyZWdpc3RlciIsInJlYWR5Iiwic2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbiIsInJlZyIsInN1YnNjcmliZSIsImF1eCIsInB1c2hNYW5hZ2VyIiwiZ2V0U3Vic2NyaXB0aW9uIiwicHVzaFN1YnNjcmlwdGlvbiIsInN1YiIsInNlbmRTdWJzY3JpcHRpb25Ub1NlcnZlciIsInVzZXJWaXNpYmxlT25seSIsImVuZHBvaW50IiwidW5zdWJzY3JpYmUiLCJldmVudCIsIm1hdGNoIiwicmVnaXN0cmF0aW9uSWQiLCJzZXRSZWdpc3RyYXRpb25JZCIsInJlZ2lzdHJhdGlvbklkcyIsImdldFJlZ2lzdHJhdGlvbklkIiwidGltZUZhY3RvcnkiLCJkaWdpdCIsImdldERpZ2l0IiwibnVtT2ZEYXlzIiwic2V0VHVydGxlVGltZXMiLCJ0aW1lIiwiZ2V0Rm9ybWF0dGVkVGltZXMiLCJ0aW1lU3RyIiwidHVydGxlQ3RybCIsIiRzY29wZSIsInRpbWV6b25lIiwiZ2V0VGltZVpvbmUiLCJub3RpZmljYXRpb25TdGF0dXMiLCJodG1sTm90aWZpY2F0aW9uU3RhdHVzIiwiZ2V0SHRtbE5vdGlmaWNhdGlvblN0YXR1cyIsIm5vdGlmaWNhdGlvbkVuYWJsZWQiLCJodG1sTm90aWZpY2F0aW9uRW5hYmxlZCIsInRvZ2dsZU5vdGlmaWNhdGlvbiIsInVwZGF0ZURpZ2l0Iiwic2V0RGlnaXQiLCJ1cGRhdGVIdG1sTm90aWZpY2F0aW9uU3RhdHVzIiwic2V0SHRtbE5vdGlmaWNhdGlvblN0YXR1cyIsInBsYXlFeGFtcGxlTm90aWZpY2F0aW9uIiwicGxheUV4YW1wbGVIdG1sTm90aWZpY2F0aW9uIiwibG9jYWxTdG9yYWdlU2VydmljZSIsImxvYWRGcm9tU3RvcmFnZSIsImRldGFpbGVkSG91clN0YXR1cyIsInVzZSIsInBvc3RVc2VyRGF0YSIsInRpbWVCZWZvcmUiLCJqc3R6IiwiZGV0ZXJtaW5lIiwibmFtZSIsImQiLCJzZXQiLCJ0ZiIsInYiLCJoIiwidHQiLCJzIiwidCIsInIiLCJsIiwiJHN0YXRlUHJvdmlkZXIiLCIkdXJsUm91dGVyUHJvdmlkZXIiLCJvdGhlcndpc2UiLCJzdGF0ZSIsInVybCIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlckFzIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBQUMsT0FBQSxPQUFBLFlBQUEsYUFBQSxZQUFBLHFCQUFBLGdCQUFBLDJCQ0FBLFdBQ0EsWUFPQSxTQUFBQyxXQUFBQyxjQWdHQSxRQUFBQyxZQUNBRCxhQUFBRSxlQUFBLFNBQUFDLElB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LFVBZUEsT0FGQThGLG1CQUVBM04sU0ExQ0FsRSxRQUFBQyxPQUFBLE9BQ0FrRSxRQUFBLGNBQUFHLGFBRUFBLFlBQUE1QixTQUFBLHNCQUFBLFFBQUEsYUFBQSxpQkNOQSxXQUNBLFlBUUEsU0FBQThELFFBQUF1TSxlQUFBQyxvQkFDQUEsbUJBQUFDLFVBQUEsV0FFQUYsZUFDQUcsTUFBQSxVQUNBQyxJQUFBLFVBQ0FDLFlBQUEscUJBQ0EzUSxXQUFBLGFBQ0E0USxhQUFBLFNBQ0FsUSxNQUNBbUgsTUFBQSxnQkFHQTRJLE1BQUEsVUFDQUMsSUFBQSxVQUNBQyxZQUFBLHFCQUNBM1EsV0FBQSxhQUNBNFEsYUFBQSxTQUNBbFEsTUFDQW1ILE1BQUEsZ0JBR0E0SSxNQUFBLFVBQ0FDLElBQUEsVUFDQUMsWUFBQSxxQkFDQTNRLFdBQUEsYUFDQTRRLGFBQUEsU0FDQWxRLE1BQ0FtSCxNQUFBLGVBR0E0SSxNQUFBLFdBQ0FDLElBQUEsV0FDQUMsWUFBQSx1QkFDQTNRLFdBQUEsY0FDQTRRLGFBQUEsVUFDQWxRLE1BQ0FtSCxNQUFBLGlCQUdBNEksTUFBQSxZQUNBQyxJQUFBLFlBQ0FDLFlBQUEseUJBQ0EzUSxXQUFBLGVBQ0E0USxhQUFBLFdBQ0FsUSxNQUNBbUgsTUFBQSxrQkFHQTRJLE1BQUEsU0FDQUMsSUFBQSxTQUNBQyxZQUFBLG1CQUNBM1EsV0FBQSxZQUNBNFEsYUFBQSxRQUNBbFEsTUFDQW1ILE1BQUEsV0E1REF0SyxRQUFBQyxPQUFBLE9BQ0F1RyxPQUFBQSxRQUVBQSxPQUFBOUQsU0FBQSxpQkFBQSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwJywgWyd1aS5yb3V0ZXInLCAnbmdNYXRlcmlhbCcsICduZ01kSWNvbnMnLCAnTG9jYWxTdG9yYWdlTW9kdWxlJywgJ21kLmRhdGEudGFibGUnLCAncGFzY2FscHJlY2h0LnRyYW5zbGF0ZSddKTsiLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgICAuY29udHJvbGxlcignQWRtaW5DdHJsJywgQWRtaW5DdHJsKTtcblxuICBBZG1pbkN0cmwuJGluamVjdCA9IFsnYWRtaW5GYWN0b3J5J107XG5cbiAgZnVuY3Rpb24gQWRtaW5DdHJsKGFkbWluRmFjdG9yeSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICBzZWxmLmdsb2JhbERhdGVzID0gW107XG4gICAgc2VsZi5qYXBhbkRhdGVzID0gW107XG4gICAgc2VsZi5nbG9iYWxTZWxlY3RlZCA9IFtdO1xuICAgIHNlbGYuamFwYW5TZWxlY3RlZCA9IFtdO1xuXG4gICAgYWN0aXZhdGUoKTtcblxuICAgIHNlbGYuYWRkQm90aCA9IGZ1bmN0aW9uKCkge1xuICAgICAgc2VsZi5hZGREYXRlKCdnbG9iYWwnKTtcbiAgICAgIHNlbGYuYWRkRGF0ZSgnamFwYW4nKTtcbiAgICB9O1xuXG4gICAgc2VsZi5hZGREYXRlID0gZnVuY3Rpb24odmVyc2lvbikge1xuICAgICAgdmFyIGRhdGUgPSBzZWxmLnR1cnRsZURhdGUudG9JU09TdHJpbmcoKS5zbGljZSgwLCAxMCk7XG4gICAgICBhZG1pbkZhY3RvcnkuYWRkVHVydGxlRGF0ZShkYXRlLCB2ZXJzaW9uLCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnIgPScsIGVycik7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVE8tRE86IGFkZCB0b2FzdCBub3RpZmljYXRpb25cbiAgICAgICAgY29uc29sZS5sb2coJ0FkZGVkIHR1cnRsZSBkYXRlJyk7XG4gICAgICAgIGFjdGl2YXRlKCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBzZWxmLnJlbW92ZVNlbGVjdGVkRGF0ZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBkYXRlcyA9IHNlbGYuZ2xvYmFsU2VsZWN0ZWQubWFwKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0dXJ0bGVEYXRlOiBkYXRlLFxuICAgICAgICAgIHZlcnNpb246ICdnbG9iYWwnLFxuICAgICAgICB9O1xuICAgICAgfSkuY29uY2F0KHNlbGYuamFwYW5TZWxlY3RlZC5tYXAoZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHR1cnRsZURhdGU6IGRhdGUsXG4gICAgICAgICAgdmVyc2lvbjogJ2phcGFuJyxcbiAgICAgICAgfTtcbiAgICAgIH0pKTtcblxuICAgICAgYWRtaW5GYWN0b3J5LnJlbW92ZVR1cnRsZURhdGVzKGRhdGVzLCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnIgPScsIGVycik7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgYWN0aXZhdGUoKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBzZWxmLnJlbW92ZVBhc3REYXRlcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG9sZERhdGVzID0gZ2V0UGFzdERhdGVzKCdnbG9iYWwnKS5jb25jYXQoZ2V0UGFzdERhdGVzKCdqYXBhbicpKTtcblxuICAgICAgY29uc29sZS5sb2coJ29sZERhdGVzID0nLCBvbGREYXRlcyk7XG4gICAgICBhZG1pbkZhY3RvcnkucmVtb3ZlVHVydGxlRGF0ZXMob2xkRGF0ZXMsIGZ1bmN0aW9uKGVycikge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ2VyciA9JywgZXJyKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zb2xlLmxvZygncmVtb3ZlZCBvbGQgZGF0ZXMnKTtcblxuICAgICAgICBhY3RpdmF0ZSgpO1xuICAgICAgfSk7XG5cbiAgICAgIGZ1bmN0aW9uIGdldFBhc3REYXRlcyh2ZXJzaW9uKSB7XG4gICAgICAgIHZhciBvbGREYXRlcyA9ICh2ZXJzaW9uID09PSAnZ2xvYmFsJykgPyBcbiAgICAgICAgICBzZWxmLmdsb2JhbERhdGVzLnNsaWNlKCkucmV2ZXJzZSgpIDogc2VsZi5qYXBhbkRhdGVzLnNsaWNlKCkucmV2ZXJzZSgpO1xuXG4gICAgICAgIHZhciBvbGREYXRlcyA9IG9sZERhdGVzLmZpbHRlcihmdW5jdGlvbihkYXRlKSB7XG4gICAgICAgICAgcmV0dXJuIG1vbWVudC51dGMoZGF0ZSkuYWRkKDEsICdkYXlzJykuaXNCZWZvcmUobW9tZW50LnV0YygpKVxuICAgICAgICB9KS5tYXAoZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0dXJ0bGVEYXRlOiBkYXRlLFxuICAgICAgICAgICAgdmVyc2lvbjogdmVyc2lvbixcbiAgICAgICAgICB9O1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyByZW1vdmUgcGFzdCBkYXRlcyBpbiBtdWx0aXBsZXMgb2YgNVxuICAgICAgICBvbGREYXRlcyA9IG9sZERhdGVzLnNsaWNlKDAsIE1hdGguZmxvb3Iob2xkRGF0ZXMubGVuZ3RoLzUpKjUpO1xuXG4gICAgICAgIHJldHVybiBvbGREYXRlcztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzZWxmLmFkZFF1YXJ0ZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIGFkbWluRmFjdG9yeS5hZGRRdWFydGVyKGZ1bmN0aW9uKGVycikge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ2VyciA9JywgZXJyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGFjdGl2YXRlKCk7XG4gICAgICB9KVxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgIGFkbWluRmFjdG9yeS5nZXRUdXJ0bGVEYXRlcyhmdW5jdGlvbihlcnIsIGdsb2JhbERhdGVzLCBqYXBhbkRhdGVzKSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnZXJyID0nLCBlcnIpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHNlbGYuZ2xvYmFsRGF0ZXMgPSBnbG9iYWxEYXRlcztcbiAgICAgICAgc2VsZi5qYXBhbkRhdGVzID0gamFwYW5EYXRlcztcbiAgICAgIH0pO1xuICAgIH1cblxuICB9XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgICAuZmFjdG9yeSgnYWRtaW5GYWN0b3J5JywgYWRtaW5GYWN0b3J5KTtcblxuICBhZG1pbkZhY3RvcnkuJGluamVjdCA9IFsnJGh0dHAnLCAnYXBpRmFjdG9yeSddO1xuXG4gIGZ1bmN0aW9uIGFkbWluRmFjdG9yeSgkaHR0cCwgYXBpRmFjdG9yeSkge1xuICAgIHZhciBzZXJ2aWNlcyA9IHtcbiAgICAgIGFkZFR1cnRsZURhdGU6IGFkZFR1cnRsZURhdGUsXG4gICAgICBhZGRUdXJ0bGVEYXRlczogYWRkVHVydGxlRGF0ZXMsXG4gICAgICByZW1vdmVUdXJ0bGVEYXRlczogcmVtb3ZlVHVydGxlRGF0ZXMsXG4gICAgICBnZXRUdXJ0bGVEYXRlczogZ2V0VHVydGxlRGF0ZXMsXG4gICAgICBhZGRRdWFydGVyOiBhZGRRdWFydGVyLFxuICAgIH07XG5cbiAgICByZXR1cm4gc2VydmljZXM7XG5cbiAgICBmdW5jdGlvbiBnZXRUdXJ0bGVEYXRlcyhjYikge1xuICAgICAgJGh0dHAuZ2V0KGFwaUZhY3RvcnkuZ2V0QmFzZVVybCgpICsgJy9hcGkvdHVydGxlL2RhdGUnKVxuICAgICAgICAudGhlbihmdW5jdGlvbiBzdWNjZXNzKHJlc3BvbnNlKSB7XG4gICAgICAgICAgdmFyIGdsb2JhbERhdGVzID0gW107XG4gICAgICAgICAgdmFyIGphcGFuRGF0ZXMgPSBbXTtcblxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzcG9uc2UuZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGFbaV0udmVyc2lvbiA9PT0gJ2dsb2JhbCcpIHtcbiAgICAgICAgICAgICAgZ2xvYmFsRGF0ZXMucHVzaChyZXNwb25zZS5kYXRhW2ldLnR1cnRsZURhdGUpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgamFwYW5EYXRlcy5wdXNoKHJlc3BvbnNlLmRhdGFbaV0udHVydGxlRGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2IobnVsbCwgZ2xvYmFsRGF0ZXMsIGphcGFuRGF0ZXMpO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiBlcnJvcigpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygndW5hYmxlIHRvIGdldCB0dXJ0bGUgZGF0ZXMnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBhZGRRdWFydGVyKGNiKSB7XG4gICAgICB2YXIgTlVNX1dFRUtTID0gMTM7XG4gICAgICB2YXIgZGF0ZXMgPSBbXTtcblxuICAgICAgdmFyIHN0YXJ0ID0gbW9tZW50LnV0YygpLnN0YXJ0T2YoJ2lzb1dlZWsnKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOVU1fV0VFS1M7IGkrKykge1xuICAgICAgICBhZGREYXRlVG9BcnJheShkYXRlcywgc3RhcnQuZm9ybWF0KCdZWVlZLU1NLUREJyksICdnbG9iYWwnKTtcbiAgICAgICAgYWRkRGF0ZVRvQXJyYXkoZGF0ZXMsIHN0YXJ0LmZvcm1hdCgnWVlZWS1NTS1ERCcpLCAnamFwYW4nKTtcbiAgICAgICAgc3RhcnQuYWRkKCc0JywgJ2RheXMnKTtcbiAgICAgICAgYWRkRGF0ZVRvQXJyYXkoZGF0ZXMsIHN0YXJ0LmZvcm1hdCgnWVlZWS1NTS1ERCcpLCAnamFwYW4nKTtcbiAgICAgICAgc3RhcnQuYWRkKCczJywgJ2RheXMnKTtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ2RhdGVzID0nLCBkYXRlcyk7XG4gICAgICBhZGRUdXJ0bGVEYXRlcyhkYXRlcywgY2IpO1xuXG4gICAgICBmdW5jdGlvbiBhZGREYXRlVG9BcnJheShhcnIsIHR1cnRsZURhdGUsIHZlcnNpb24pIHtcbiAgICAgICAgYXJyLnB1c2goe1xuICAgICAgICAgIHR1cnRsZURhdGU6IHR1cnRsZURhdGUsXG4gICAgICAgICAgdmVyc2lvbjogdmVyc2lvbixcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYWRkVHVydGxlRGF0ZXMoZGF0ZXMsIGNiKSB7XG4gICAgICB2YXIgcnVuQ291bnQgPSAwO1xuICAgICAgXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGFkZFR1cnRsZURhdGUoZGF0ZXNbaV0udHVydGxlRGF0ZSwgZGF0ZXNbaV0udmVyc2lvbiwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2VyciA9JywgZXJyKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoKytydW5Db3VudCA9PT0gZGF0ZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjYigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhZGRUdXJ0bGVEYXRlKGRhdGVTdHJpbmcsIHZlcnNpb24sIGNiKSB7XG4gICAgICB2YXIgdHVydGxlRGF0ZSA9IGNvbnZlcnRUb1VUQyhkYXRlU3RyaW5nKTtcbiAgICAgICRodHRwLnBvc3QoYXBpRmFjdG9yeS5nZXRCYXNlVXJsKCkgKyAnL2FwaS90dXJ0bGUvZGF0ZScsIHtcbiAgICAgICAgdHVydGxlRGF0ZTogdHVydGxlRGF0ZSxcbiAgICAgICAgdmVyc2lvbjogdmVyc2lvbixcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gc3VjY2VzcygpIHtcbiAgICAgICAgY2IobnVsbCk7XG4gICAgICB9KS5jYXRjaChmdW5jdGlvbiBlcnJvcigpIHtcbiAgICAgICAgY2IoJ1VuYWJsZSB0byBzZW5kIG1lc3NhZ2UnKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbW92ZVR1cnRsZURhdGVzKGRhdGVzLCBjYikge1xuICAgICAgZGF0ZXMgPSBkYXRlcy5tYXAoZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHR1cnRsZURhdGU6IGNvbnZlcnRUb1VUQyhkYXRlLnR1cnRsZURhdGUpLFxuICAgICAgICAgIHZlcnNpb246IGRhdGUudmVyc2lvbixcbiAgICAgICAgfTtcbiAgICAgIH0pXG5cbiAgICAgIHZhciBydW5Db3VudCA9IDA7XG4gICAgICBcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVtb3ZlVHVydGxlRGF0ZShkYXRlc1tpXSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2VyciA9JywgZXJyKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoKytydW5Db3VudCA9PT0gZGF0ZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjYigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlVHVydGxlRGF0ZSh0dXJ0bGVEYXRlLCBjYikge1xuICAgICAgdmFyIHBhcmFtcyA9IHtcbiAgICAgICAgcGFyYW1zOiB0dXJ0bGVEYXRlLFxuICAgICAgfTtcblxuICAgICAgJGh0dHAuZGVsZXRlKGFwaUZhY3RvcnkuZ2V0QmFzZVVybCgpICsgJy9hcGkvdHVydGxlL2RhdGUnLCBwYXJhbXMpXG4gICAgICAudGhlbihmdW5jdGlvbiBzdWNjZXNzKCkge1xuICAgICAgICBjYihudWxsKTtcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIGVycm9yKCkge1xuICAgICAgICBjYignVW5hYmxlIHRvIGRlbGV0ZSAnICsgcGFyYW1zLnR1cnRsZURhdGUpO1xuICAgICAgfSk7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBjb252ZXJ0VG9VVEMoZGF0ZVN0cmluZykge1xuICAgICAgcmV0dXJuIG1vbWVudC51dGMoZGF0ZVN0cmluZykuZm9ybWF0KCd4Jyk7XG4gICAgfVxuICB9XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgLmNvbnRyb2xsZXIoJ0JhcnJlbEN0cmwnLCBiYXJyZWxDdHJsKTtcblxuICBiYXJyZWxDdHJsLiRpbmplY3QgPSBbJyRtZE1lZGlhJywgJ3VzZXJGYWN0b3J5JywgJ2JhcnJlbEZhY3RvcnknXTtcblxuICBmdW5jdGlvbiBiYXJyZWxDdHJsKCRtZE1lZGlhLCB1c2VyRmFjdG9yeSwgYmFycmVsRmFjdG9yeSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgIHNldFBhcmFtcygpO1xuXG4gICAgZnVuY3Rpb24gc2V0UGFyYW1zKCkge1xuICAgICAgc2VsZi52ZXJzaW9uID0gdXNlckZhY3RvcnkuZ2V0VmVyc2lvbigpO1xuICAgICAgc2VsZi5iYXJyZWxUaW1lcyA9IGJhcnJlbEZhY3RvcnkuZ2V0QmFycmVsVGltZXMoKTtcbiAgICAgIHNlbGYuZm9ybWF0ID0gdXNlckZhY3RvcnkuZ2V0RGV0YWlsZWRIb3VyU3RhdHVzKCk7XG4gICAgfVxuXG4gICAgc2VsZi51cGRhdGVWZXJzaW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICB1c2VyRmFjdG9yeS5zZXRWZXJzaW9uKHNlbGYudmVyc2lvbik7XG4gICAgICBzZWxmLmJhcnJlbFRpbWVzID0gYmFycmVsRmFjdG9yeS5nZXRCYXJyZWxUaW1lcygpO1xuICAgIH07XG5cbiAgICBzZWxmLmlzTGFyZ2VTY3JlZW4gPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAkbWRNZWRpYSgnZ3QtbWQnKTtcbiAgICB9O1xuXG4gICAgc2VsZi5zaG93SG91cnMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHVzZXJGYWN0b3J5LnNldERldGFpbGVkSG91clN0YXR1cyhzZWxmLmZvcm1hdCk7XG4gICAgfVxuICB9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gICAgLmZhY3RvcnkoJ2JhcnJlbEZhY3RvcnknLCBiYXJyZWxGYWN0b3J5KTtcblxuICBiYXJyZWxGYWN0b3J5LiRpbmplY3QgPSBbJ3VzZXJGYWN0b3J5J107XG5cbiAgZnVuY3Rpb24gYmFycmVsRmFjdG9yeSh1c2VyRmFjdG9yeSkge1xuICAgIHZhciBzZXJ2aWNlcyA9IHtcbiAgICAgIGdldEJhcnJlbFRpbWVzOiBnZXRCYXJyZWxUaW1lc1xuICAgIH07XG5cblxuICAgIHJldHVybiBzZXJ2aWNlcztcblxuICAgIGZ1bmN0aW9uIGdldEJhcnJlbFRpbWVzKCkge1xuICAgICAgdmFyIHZlcnNpb24gPSB1c2VyRmFjdG9yeS5nZXRWZXJzaW9uKCk7XG4gICAgICB2YXIgTlVNX0RBWVMgPSA1O1xuICAgICAgdmFyIGJhcnJlbFRpbWVzID0gW107XG4gICAgICB2YXIgZGF0YSA9IGdldFN0YXJ0RW5kVGltZXModmVyc2lvbik7XG4gICAgICB2YXIgc3RhcnQgPSBkYXRhLnN0YXJ0O1xuICAgICAgdmFyIGVuZCA9IGRhdGEuZW5kO1xuICAgICAgdmFyIGhvdXJEaXNwbGF5ID0gc3RhcnQuY2xvbmUoKS5sb2NhbCgpLmZvcm1hdCgnSEg6bW0nKSArICctJyArIGVuZC5jbG9uZSgpLmxvY2FsKCkuZm9ybWF0KCdISDptbScpO1xuICAgICAgdmFyIGRheU9mWWVhciA9IHN0YXJ0LmRheU9mWWVhcigpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOVU1fREFZUzsgaSsrKSB7XG4gICAgICAgIGJhcnJlbFRpbWVzLnB1c2goZ2V0VGltZShpKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBiYXJyZWxUaW1lcztcblxuICAgICAgZnVuY3Rpb24gZ2V0VGltZShkYXlOdW0pIHtcbiAgICAgICAgdmFyIHN0YXJ0T2ZEYXkgPSBzdGFydC5jbG9uZSgpLmFkZChkYXlOdW0sICdkYXlzJyk7XG4gICAgICAgIHZhciB3b29kID0gWzAsIDUsIDQsIDksIDMsIDgsIDQsIDksIDIsIDcsIDMsIDgsIDEsIDYsIDIsIDcsIDAsIDUsIDEsIDZdO1xuICAgICAgICB2YXIgc2lsdmVyID0gWzEsIDYsIDIsIDcsIDAsIDUsIDEsIDYsIDAsIDUsIDQsIDksIDMsIDgsIDQsIDksIDIsIDcsIDMsIDhdO1xuICAgICAgICB2YXIgZ29sZCA9IFszLCA4LCAyLCA3LCAxLCA2LCAwLCA1LCA0LCA5XTtcblxuICAgICAgICB2YXIgb2Zmc2V0ID0gZGF5TnVtICsgZGF5T2ZZZWFyICsgNDtcblxuICAgICAgICB2YXIgaW5kZXgxID0gKG9mZnNldCAqIDQpICUgMjA7XG4gICAgICAgIHZhciBpbmRleDIgPSAob2Zmc2V0ICogMikgJSAxMDtcblxuICAgICAgICB2YXIgd29vZERpZ2l0cyA9IHdvb2Quc2xpY2UoaW5kZXgxLCBpbmRleDEgKyA0KTtcbiAgICAgICAgdmFyIHNpbHZlckRpZ2l0cyA9IHNpbHZlci5zbGljZShpbmRleDEsIGluZGV4MSArIDQpO1xuICAgICAgICB2YXIgZ29sZERpZ2l0cyA9IGdvbGQuc2xpY2UoaW5kZXgyLCBpbmRleDIgKyAyKTtcbiAgICAgICAgdmFyIGRhdGUgPSBzdGFydE9mRGF5LmZvcm1hdCgnWVlZWS1NTS1ERCcpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgZGF0ZTogZGF0ZSxcbiAgICAgICAgICB3b29kRGlnaXRzOiB3b29kRGlnaXRzLFxuICAgICAgICAgIHNpbHZlckRpZ2l0czogc2lsdmVyRGlnaXRzLFxuICAgICAgICAgIGdvbGREaWdpdHM6IGdvbGREaWdpdHMsXG4gICAgICAgICAgaG91ckRpc3BsYXk6IGhvdXJEaXNwbGF5LFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFN0YXJ0RW5kVGltZXModmVyc2lvbikge1xuICAgICAgdmFyIG5vdyA9IG1vbWVudCgpO1xuICAgICAgdmFyIGhvdXJPZmZzZXQgPSAodmVyc2lvbiA9PT0gJ2dsb2JhbCcpID8gMTIgOiA2O1xuICAgICAgdmFyIHN0YXJ0ID0gbW9tZW50LnV0YygpLnN0YXJ0T2YoJ2RheScpLmFkZChob3VyT2Zmc2V0LCAnaG91cnMnKTtcbiAgICAgIHZhciBlbmQgPSBzdGFydC5jbG9uZSgpLmFkZCgyMywgJ2hvdXJzJykuYWRkKDU5LCAnbWludXRlcycpOztcblxuICAgICAgaWYgKG5vdy5pc0FmdGVyKGVuZCkpIHtcbiAgICAgICAgc3RhcnQuYWRkKDEsICdkYXknKTtcbiAgICAgICAgZW5kLmFkZCgxLCAnZGF5Jyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0YXJ0OiBzdGFydCxcbiAgICAgICAgZW5kOiBlbmQsXG4gICAgICB9O1xuICAgIH1cblxuICB9XG5cbn0pKCk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgLmNvbmZpZyhmdW5jdGlvbiAoJHRyYW5zbGF0ZVByb3ZpZGVyKSB7XG4gICAgJHRyYW5zbGF0ZVByb3ZpZGVyLnRyYW5zbGF0aW9ucygnZW4nLCB7XG4gICAgICBOQVZfVFVSVExFOiAnVHVydGxlIFRpbWUnLFxuICAgICAgTkFWX0JBUlJFTDogJ0JhcnJlbCBCcmVha2luZycsXG4gICAgICBOQVZfRVZFTlQ6ICdFdmVudCcsXG4gICAgICBOQVZfQ09OVEFDVDogJ0NvbnRhY3QgTWUnLFxuICAgICAgTkFWX1NFVFRJTkdTOiAnU2V0dGluZ3MnLFxuICAgICAgVFRfVElUTEU6ICdUdXJ0bGUgVGltZSBDYWxjdWxhdG9yJyxcbiAgICAgIFRUX0RJR0lUOiAnNnRoIGRpZ2l0IG9mIElEJyxcbiAgICAgIFRUX0ZPUk1BVDogJ1RpbWUgRm9ybWF0JyxcbiAgICAgIFRUX1NUQU5EQVJEOiAnU3RhbmRhcmQnLFxuICAgICAgVFRfTUlMSVRBUlk6ICcyNGhyIGZvcm1hdCcsXG4gICAgICBUVF9USU1FWk9ORTogJ1RpbWUgWm9uZTonLFxuICAgICAgVFRfU0VFTU9SRTogJ1NlZSBNb3JlJyxcbiAgICAgIFRUX0FERF9DQUxFTkRBUjogJ0FkZCB0byBDYWxlbmRhcicsXG4gICAgICBUVF9OT1RJRklDQVRJT046ICdDaHJvbWUvQW5kcm9pZCBOb3RpZmljYXRpb25zJyxcbiAgICAgIFRUX0hUTUxfTk9USUZJQ0FUSU9OOiAnSFRNTCBOb3RpZmljYXRpb25zJyxcbiAgICAgIFRUX05PVElGX1RFU1Q6ICdFeGFtcGxlIENocm9tZS9BbmRyb2lkIE5vdGlmaWNhdGlvbicsXG4gICAgICBUVF9IVE1MX05PVElGX1RFU1Q6ICdFeGFtcGxlIEhUTUwgTm90aWZpY2F0aW9uJyxcbiAgICAgIFRUX05PVElGX01JTlVURVM6ICdNaW51dGVzIGJlZm9yZSBldmVudCcsXG4gICAgICBUVF9NSU5VVEVTOiAnTWludXRlcycsXG4gICAgICBUVF9OT1RJRl9TT1VORDogJ1BsYXkgc291bmQnLFxuICAgICAgVFRfTk9USUZfRVhBTVBMRTogJ0V4YW1wbGUnLFxuICAgICAgQkJfVElUTEU6ICdCYXJyZWwgQnJlYWtpbmcnLFxuICAgICAgQkJfVElNRTogJ1RpbWUgdGlsbCBuZXh0IHJvdGF0aW9uOicsXG4gICAgICBCQl9BTFQ6ICdTaG93IEhvdXJzJyxcbiAgICAgIEJCX0RBVEU6ICdEYXRlJyxcbiAgICAgIEJCX1dPT0RFTjogJ1dvb2RlbicsXG4gICAgICBCQl9TSUxWRVI6ICdTaWx2ZXInLFxuICAgICAgQkJfR09MRDogJ0dvbGQnXG4gICAgfSlcbiAgICAudHJhbnNsYXRpb25zKCdkZScsIHtcbiAgICAgIE5BVl9UVVJUTEU6ICdUdXJ0bGUgWmVpdGVuJyxcbiAgICAgIE5BVl9CQVJSRUw6ICdGcmllbmQgR2FtZScsXG4gICAgICBOQVZfRVZFTlQ6ICdFcmVpZ25pcycsXG4gICAgICBOQVZfQ09OVEFDVDogJ0tvbnRha3RpZXJlIE1pY2gnLFxuICAgICAgTkFWX1NFVFRJTkdTOiAnRWluc3RlbGx1bmdlbicsXG4gICAgICBUVF9USVRMRTogJ1R1cnRsZSBaZWl0ZW4gUmVjaG5lcicsXG4gICAgICBUVF9ESUdJVDogJzZ0ZSBaaWZmZXIgZGVyIElEJyxcbiAgICAgIFRUX0ZPUk1BVDogJ1plaXRmb3JtYXQnLFxuICAgICAgVFRfU1RBTkRBUkQ6ICdTdGFuZGFyZCcsXG4gICAgICBUVF9NSUxJVEFSWTogJzI0LVN0dW5kZW4nLFxuICAgICAgVFRfVElNRVpPTkU6ICdaZWl0em9uZTonLFxuICAgICAgVFRfU0VFTU9SRTogJ3NpZWhlIG1laHInLFxuICAgICAgVFRfQUREX0NBTEVOREFSOiAnWnVtIEthbGVuZGVyIGhpbnp1ZsO8Z2VuJyxcbiAgICAgIFRUX05PVElGSUNBVElPTjogJ0Nocm9tZS9BbmRyb2lkIEJlbmFjaHJpY2h0aWd1bmcnLFxuICAgICAgVFRfSFRNTF9OT1RJRklDQVRJT046ICdIVE1MIEJlbmFjaHJpY2h0aWd1bmcnLFxuICAgICAgVFRfTk9USUZfVEVTVDogJ0JlaXNwaWVsIENocm9tZS9BbmRyb2lkIEJlbmFjaHJpY2h0aWd1bmcnLFxuICAgICAgVFRfSFRNTF9OT1RJRl9URVNUOiAnQmVpc3BpZWwgSFRNTCBCZW5hY2hyaWNodGlndW5nJyxcbiAgICAgIFRUX05PVElGX01JTlVURVM6ICdIVE1MLUJlbmFjaHJpY2h0aWd1bmcnLFxuICAgICAgVFRfTUlOVVRFUzogJ01pbnV0ZW4nLFxuICAgICAgVFRfTk9USUZfU09VTkQ6ICdUb24gYWJzcGllbGVuJyxcbiAgICAgIFRUX05PVElGX0VYQU1QTEU6ICdCZWlzcGllbCcsXG4gICAgICBCQl9USVRMRTogJ0JhcnJlbCBCcmVha2luZycsXG4gICAgICBCQl9USU1FOiAnWmVpdCBiaXMgenVtIG7DpGNoc3RlbiBXZWNoc2VsOicsXG4gICAgICBCQl9BTFQ6ICdBbnplaWdlIFN0dW5kZW4nLFxuICAgICAgQkJfREFURTogJ0RhdHVtJyxcbiAgICAgIEJCX1dPT0RFTjogJ0hvbHonLFxuICAgICAgQkJfU0lMVkVSOiAnU2lsYmVyJyxcbiAgICAgIEJCX0dPTEQ6ICdHb2xkJ1xuICAgIH0pXG4gICAgLnRyYW5zbGF0aW9ucygnZXMnLCB7XG4gICAgICBOQVZfVFVSVExFOiAnSG9yYXJpbyBUb3J0dWdhcycsXG4gICAgICBOQVZfQkFSUkVMOiAnRnJpZW5kIEdhbWUnLFxuICAgICAgTkFWX0VWRU5UOiAnRXZlbnRvJyxcbiAgICAgIE5BVl9DT05UQUNUOiAnQ29udMOhY3RhbWUnLFxuICAgICAgTkFWX1NFVFRJTkdTOiAnQ29uZmlndXJhY2nDs24nLFxuICAgICAgVFRfVElUTEU6ICdIb3JhcmlvIFRvcnR1Z2FzIENhbGN1bGFkb3JhJyxcbiAgICAgIFRUX0RJR0lUOiAnNnRoIGTDrWdpdG8gZGUgSUQnLFxuICAgICAgVFRfRk9STUFUOiAnZm9ybWF0byBkZSB0aWVtcG8nLFxuICAgICAgVFRfU1RBTkRBUkQ6ICdlc3TDoW5kYXInLFxuICAgICAgVFRfTUlMSVRBUlk6ICcyNCBob3JhcycsXG4gICAgICBUVF9USU1FWk9ORTogJ1pvbmEgSG9yYXJpYTonLFxuICAgICAgVFRfU0VFTU9SRTogJ3ZlciBtw6FzJyxcbiAgICAgIFRUX0FERF9DQUxFTkRBUjogJ0HDsWFkaXIgYWwgY2FsZW5kYXJpbycsXG4gICAgICBUVF9OT1RJRklDQVRJT046ICdOb3RpZmljYWNpb25lcyBkZSBDaHJvbWUvQW5kcm9pZCcsXG4gICAgICBUVF9IVE1MX05PVElGSUNBVElPTjogJ05vdGlmaWNhY2lvbmVzIGRlIEhUTUwnLFxuICAgICAgVFRfTk9USUZfVEVTVDogJ1Rlc3QgQ2hyb21lL0FuZHJvaWQgTm90aWZpY2F0aW9uJyxcbiAgICAgIFRUX0hUTUxfTk9USUZfVEVTVDogJ1Rlc3QgSFRNTCBOb3RpZmljYXRpb24nLFxuICAgICAgVFRfTk9USUZfTUlOVVRFUzogJ01pbnV0b3MgYW50ZXMgZGUgZXZlbnRvJyxcbiAgICAgIFRUX01JTlVURVM6ICdNaW51dG9zJyxcbiAgICAgIFRUX05PVElGX1NPVU5EOiAnUmVwcm9kdWNpciBzb25pZG8nLFxuICAgICAgVFRfTk9USUZfRVhBTVBMRTogJ0VqZW1wbG8nLFxuICAgICAgQkJfVElUTEU6ICdGcmllbmQgR2FtZScsXG4gICAgICBCQl9USU1FOiAnVGllbXBvIGhhc3RhIGxhIHByw7N4aW1hIHJvdGFjacOzbjonLFxuICAgICAgQkJfQUxUOiAnTW9zdHJhciBsYXMgaG9yYXMnLFxuICAgICAgQkJfREFURTogJ0ZlY2hhJyxcbiAgICAgIEJCX1dPT0RFTjogJ01hZGVyYScsXG4gICAgICBCQl9TSUxWRVI6ICdQbGF0YScsXG4gICAgICBCQl9HT0xEOiAnT3JvJ1xuICAgIH0pXG4gICAgLnRyYW5zbGF0aW9ucygnZnInLCB7XG4gICAgICBOQVZfVFVSVExFOiAnSG9yYWlyZXMgZGVzIFRvcnR1ZXMnLFxuICAgICAgTkFWX0JBUlJFTDogJ1BhcnRpZSBkXFwnYW1pcycsXG4gICAgICBOQVZfRVZFTlQ6ICdFdmVudCcsXG4gICAgICBOQVZfQ09OVEFDVDogJ01lIENvbnRhY3RlcicsXG4gICAgICBOQVZfU0VUVElOR1M6ICdSw6lnbGFnZXMnLFxuICAgICAgVFRfVElUTEU6ICdDYWxjdWxhdGV1ciBkZSBsXFwnSG9yYWlyZSBkZXMgVG9ydHVlcycsXG4gICAgICBUVF9ESUdJVDogJzZlbWUgY2hpZmZyZSBJRCcsXG4gICAgICBUVF9GT1JNQVQ6ICdmb3JtYXQgZGUgbFxcJ2hldXJlJyxcbiAgICAgIFRUX1NUQU5EQVJEOiAnbm9ybWFsZScsXG4gICAgICBUVF9NSUxJVEFSWTogJzI0aCcsXG4gICAgICBUVF9USU1FWk9ORTogJ0Z1c2VhdSBIb3JhaXJlOicsXG4gICAgICBUVF9TRUVNT1JFOiAnTGlyZSBsYSBzdWl0ZScsXG4gICAgICBUVF9BRERfQ0FMRU5EQVI6ICdBam91dGVyIGF1IENhbGVuZHJpZXInLFxuICAgICAgVFRfTk9USUZJQ0FUSU9OOiAnTm90aWZpY2F0aW9ucyBHb29nbGUvQW5kcm9pZCcsXG4gICAgICBUVF9IVE1MX05PVElGSUNBVElPTjogJ05vdGlmaWNhdGlvbnMgSFRNTCcsXG4gICAgICBUVF9OT1RJRl9URVNUOiAnVGVzdCBDaHJvbWUvQW5kcm9pZCBOb3RpZmljYXRpb24nLFxuICAgICAgVFRfSFRNTF9OT1RJRl9URVNUOiAnVGVzdCBIVE1MIE5vdGlmaWNhdGlvbicsXG4gICAgICBUVF9OT1RJRl9NSU5VVEVTOiAnVGVtcHMgUmVzdGFudCBhdmFudCBFdmVudCcsXG4gICAgICBUVF9NSU5VVEVTOiAnTWludXRlcycsXG4gICAgICBUVF9OT1RJRl9TT1VORDogJ0pvdWVyIGxlIHNvbicsXG4gICAgICBUVF9OT1RJRl9FWEFNUExFOiAnRXhlbXBsZScsXG4gICAgICBCQl9USVRMRTogJ8OJY2xhdGVtZW50IGR1IFRvbm5lYXUnLFxuICAgICAgQkJfVElNRTogJ1RlbXBzIGp1c3F1XFwnw6AgbGEgUHJvY2hhaW5lIFJvdGF0aW9uOicsXG4gICAgICBCQl9BTFQ6ICdBZmZpY2hlciBsZXMgSGV1cmVzJyxcbiAgICAgIEJCX0RBVEU6ICdEYXRlJyxcbiAgICAgIEJCX1dPT0RFTjogJ0JvaXMnLFxuICAgICAgQkJfU0lMVkVSOiAnQXJnZW50JyxcbiAgICAgIEJCX0dPTEQ6ICdPcicsXG4gICAgfSk7XG4gICAgJHRyYW5zbGF0ZVByb3ZpZGVyLnByZWZlcnJlZExhbmd1YWdlKCdlbicpO1xuICAgICR0cmFuc2xhdGVQcm92aWRlci51c2VTYW5pdGl6ZVZhbHVlU3RyYXRlZ3koJ2VzY2FwZWQnKTtcbiAgfSk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgLmNvbnRyb2xsZXIoJ0NvbnRhY3RDdHJsJywgY29udGFjdEN0cmwpO1xuXG4gIGNvbnRhY3RDdHJsLiRpbmplY3QgPSBbJyRodHRwJywgJ2FwaUZhY3RvcnknXTtcblxuICBmdW5jdGlvbiBjb250YWN0Q3RybCgkaHR0cCwgYXBpRmFjdG9yeSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgIHNlbGYuc3ViamVjdHMgPSBbXG4gICAgICAnSW5jb3JyZWN0IFR1cnRsZSBUaW1lJyxcbiAgICAgICdSZXBvcnQgYSBidWcnLFxuICAgICAgJ090aGVyJyxcbiAgICBdO1xuXG4gICAgc2VsZi5tZXNzYWdlID0ge307XG5cblxuICAgIHNlbGYuaXNUdXJ0bGVCdWcgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChzZWxmLm1lc3NhZ2Uuc3ViamVjdCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gc2VsZi5tZXNzYWdlLnN1YmplY3QgPT09ICdJbmNvcnJlY3QgVHVydGxlIFRpbWUnO1xuICAgIH1cblxuICAgIHNlbGYuc2VuZE1lc3NhZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgIHNlbGYuc3RhdHVzID0gJ1NlbmRpbmcuLi4nO1xuICAgICAgJGh0dHAucG9zdChhcGlGYWN0b3J5LmdldEJhc2VVcmwoKSArICcvY29udGFjdCcsIHNlbGYubWVzc2FnZSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uIHN1Y2Nlc3MoKSB7XG4gICAgICAgIHNlbGYuc3RhdHVzID0gJ1NlbnQhJztcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIGVycm9yKCkge1xuICAgICAgICBzZWxmLnN0YXR1cyA9ICdFcnJvciBzZW5kaW5nLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLic7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgLmNvbnRyb2xsZXIoJ0V2ZW50c0N0cmwnLCBldmVudHNDdHJsKTtcblxuICBldmVudHNDdHJsLiRpbmplY3QgPSBbJyRtZE1lZGlhJywgJ3VzZXJGYWN0b3J5JywgJ2V2ZW50c0ZhY3RvcnknXTtcbiAgXG4gIGZ1bmN0aW9uIGV2ZW50c0N0cmwoJG1kTWVkaWEsIHVzZXJGYWN0b3J5LCBldmVudHNGYWN0b3J5KSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgc2V0UGFyYW1zKCk7XG5cbiAgICBmdW5jdGlvbiBzZXRQYXJhbXMoKSB7XG4gICAgICBzZWxmLnZlcnNpb24gPSB1c2VyRmFjdG9yeS5nZXRWZXJzaW9uKCk7XG4gICAgICBzZWxmLmV2ZW50VGltZXMgPSBldmVudHNGYWN0b3J5LmdldEV2ZW50VGltZXMoKTtcbiAgICAgIHNlbGYuZm9ybWF0ID0gdXNlckZhY3RvcnkuZ2V0RGV0YWlsZWRIb3VyU3RhdHVzKCk7XG4gICAgfVxuXG4gICAgc2VsZi51cGRhdGVWZXJzaW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICB1c2VyRmFjdG9yeS5zZXRWZXJzaW9uKHNlbGYudmVyc2lvbik7XG4gICAgICBzZWxmLmV2ZW50VGltZXMgPSBldmVudHNGYWN0b3J5LmdldEV2ZW50VGltZXMoKTtcbiAgICB9XG5cbiAgICBzZWxmLmlzTGFyZ2VTY3JlZW4gPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAkbWRNZWRpYSgnZ3QtbWQnKTtcbiAgICB9O1xuXG4gICAgc2VsZi5zaG93SG91cnMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHVzZXJGYWN0b3J5LnNldERldGFpbGVkSG91clN0YXR1cyhzZWxmLmZvcm1hdCk7XG4gICAgfVxuICB9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gICAgLmZhY3RvcnkoJ2V2ZW50c0ZhY3RvcnknLCBldmVudHNGYWN0b3J5KTtcblxuICBldmVudHNGYWN0b3J5LiRpbmplY3QgPSBbJ3VzZXJGYWN0b3J5J107XG5cbiAgZnVuY3Rpb24gZXZlbnRzRmFjdG9yeSh1c2VyRmFjdG9yeSkge1xuICAgIHZhciBzZXJ2aWNlcyA9IHtcbiAgICAgIGdldEV2ZW50VGltZXM6IGdldEV2ZW50VGltZXNcbiAgICB9O1xuXG4gICAgcmV0dXJuIHNlcnZpY2VzO1xuXG4gICAgZnVuY3Rpb24gZ2V0RXZlbnRUaW1lcygpIHtcbiAgICAgIHZhciB2ZXJzaW9uID0gdXNlckZhY3RvcnkuZ2V0VmVyc2lvbigpO1xuICAgICAgdmFyIE5VTV9EQVlTID0gNTtcbiAgICAgIHZhciBkcm9wVGFibGUgPSBbJ0xvZ3VldG93biwgSmF5YScsICdBcmxvbmcgUGFyaywgQWx1YmFybmEnLCAnQmFyYXRpZSwgTmFub2hhbmEgUmFpbmJhc2UnLCAnU3lydXAgVmlsbGFnZSwgRHJ1bSBJc2xhbmQnLCAnT3JhbmdlIFRvd24sIExpdHRsZSBHYXJkZW4nLCAnU2hlbGwgVG93biwgV2hpc2tleSBQZWFrLCBBcmsgTWF4aW0nLCAnQWx2aWRhXFwncyBIaWRlb3V0LCBUd2luIENhcGUsIFNreXBpYSddO1xuICAgICAgdmFyIHN0YW1pbmFUYWJsZSA9IFsnT3JhbmdlIFRvd24sIERydW0gSXNsYW5kJywgJ1NoZWxsIFRvd24sIExpdHRsZSBHYXJkZW4nLCAnQWx2aWRhXFwncyBIaWRlb3V0LCBXaGlza2V5IFBlYWssIEFyayBNYXhpbScsICdGdXNjaGlhIFZpbGxhZ2UsIFR3aW4gQ2FwZSwgU2t5cGlhJywgJ0xvZ3VldG93biwgSmF5YScsICdBcmxvbmcgUGFyaywgQWx1YmFybmEnLCAnQmFyYXRpZSwgTmFub2hhbmEgUmFpbmJhc2UnXTtcbiAgICAgIHZhciBiZWxpVGFibGUgPSBbJ0JhcmF0aWUsIFdoaXNrZXkgUGVhaywgQXJrIE1heGltJywgJ1N5cnVwIFZpbGxhZ2UsIFR3aW4gQ2FwZSwgU2t5cGlhJywgJ0xvZ3VldG93biwgSmF5YScsICdBcmxvbmcgUGFyaywgQWx1YmFybmEnLCAnQmFyYXRpZSwgTmFub2hhbmEgUmFpbmJhc2UnLCAnU3lydXAgVmlsbGFnZSwgRHJ1bSBJc2xhbmQnLCAnTGl0dGxlIEdhcmRlbiddO1xuICAgICAgdmFyIHN0YXJ0ID0gZ2V0U3RhcnRUaW1lKHZlcnNpb24pO1xuICAgICAgdmFyIGRheU9mWWVhciA9IHN0YXJ0LmRheU9mWWVhcigpO1xuXG4gICAgICB2YXIgZXZlbnRUaW1lcyA9IFtdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IE5VTV9EQVlTOyBpKyspIHtcbiAgICAgICAgZXZlbnRUaW1lcy5wdXNoKGdldFRpbWUoaSkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZXZlbnRUaW1lcztcblxuICAgICAgZnVuY3Rpb24gZ2V0VGltZShkYXlOdW0pIHtcbiAgICAgICAgdmFyIG9mZnNldCA9IGRheU51bSArIGRheU9mWWVhciArIDM7XG4gICAgICAgIG9mZnNldCA9IG9mZnNldCAlIDc7XG5cbiAgICAgICAgdmFyIGRyb3AgPSBkcm9wVGFibGVbb2Zmc2V0XS5zcGxpdCgnLCcpO1xuICAgICAgICB2YXIgc3RhbWluYSA9IHN0YW1pbmFUYWJsZVtvZmZzZXRdLnNwbGl0KCcsJyk7XG4gICAgICAgIHZhciBiZWxpID0gYmVsaVRhYmxlW29mZnNldF0uc3BsaXQoJywnKTtcbiAgICAgICAgdmFyIHN0YXJ0RGF0ZSA9IHN0YXJ0LmNsb25lKCkuYWRkKGRheU51bSwgJ2RheXMnKTtcblxuICAgICAgICB2YXIgaG91ck9mZnNldCA9ICh2ZXJzaW9uID09PSAnZ2xvYmFsJykgPyAyMyA6IDExO1xuICAgICAgICB2YXIgZW5kID0gc3RhcnREYXRlLmNsb25lKCkuYWRkKGhvdXJPZmZzZXQsICdob3VycycpLmFkZCg1OSwgJ21pbnV0ZXMnKTtcbiAgICAgICAgdmFyIGRhdGUgPSBzdGFydERhdGUuZm9ybWF0KCdZWVlZLU1NLUREJyk7XG4gICAgICAgIHZhciBob3VyU3RyaW5nID0gc3RhcnREYXRlLmZvcm1hdCgnSEg6bW0nKSArICctJyArIGVuZC5mb3JtYXQoJ0hIOm1tJyk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBkYXRlOiBkYXRlLFxuICAgICAgICAgIGhvdXJEaXNwbGF5OiBob3VyU3RyaW5nLFxuICAgICAgICAgIGRyb3A6IGRyb3AsXG4gICAgICAgICAgc3RhbWluYTogc3RhbWluYSxcbiAgICAgICAgICBiZWxpOiBiZWxpLFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0U3RhcnRUaW1lKHZlcnNpb24pIHtcbiAgICAgIHZhciBob3VyT2Zmc2V0ID0gKHZlcnNpb24gPT09ICdnbG9iYWwnKSA/IDggOiAyO1xuICAgICAgdmFyIHN0YXJ0ID0gbW9tZW50LnV0YygpLnN0YXJ0T2YoJ2RheScpLmFkZChob3VyT2Zmc2V0LCAnaG91cnMnKTtcbiAgICAgIHZhciBub3cgPSBtb21lbnQoKTtcblxuICAgICAgaWYgKG5vdy5pc0FmdGVyKHN0YXJ0KSlcbiAgICAgICAgc3RhcnQuc3VidHJhY3QoMSwgJ2RheScpO1xuXG4gICAgICByZXR1cm4gc3RhcnQ7XG4gICAgfVxuICB9XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgLmNvbnRyb2xsZXIoJ05hdmJhckN0cmwnLCBuYXZiYXJDdHJsKTtcblxuICBuYXZiYXJDdHJsLiRpbmplY3QgPSBbJyRzdGF0ZScsICckbWRTaWRlbmF2JywgJyR0cmFuc2xhdGUnXTtcblxuICBmdW5jdGlvbiBuYXZiYXJDdHJsKCRzdGF0ZSwgJG1kU2lkZW5hdiwgJHRyYW5zbGF0ZSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgIHNlbGYubWVudSA9IFtcbiAgICAgIHtcbiAgICAgICAgbGluazogJ3R1cnRsZScsXG4gICAgICAgIHRpdGxlOiAkdHJhbnNsYXRlLmluc3RhbnQoJ05BVl9UVVJUTEUnKSxcbiAgICAgICAgaWNvbjogJ2hvbWUnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBsaW5rOiAnYmFycmVsJyxcbiAgICAgICAgdGl0bGU6ICR0cmFuc2xhdGUuaW5zdGFudCgnTkFWX0JBUlJFTCcpLFxuICAgICAgICBpY29uOiAnc3RhcnMnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBsaW5rOiAnZXZlbnRzJyxcbiAgICAgICAgdGl0bGU6ICR0cmFuc2xhdGUuaW5zdGFudCgnTkFWX0VWRU5UJyksXG4gICAgICAgIGljb246ICdldmVudCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGxpbms6ICdjb250YWN0JyxcbiAgICAgICAgdGl0bGU6ICR0cmFuc2xhdGUuaW5zdGFudCgnTkFWX0NPTlRBQ1QnKSxcbiAgICAgICAgaWNvbjogJ2VtYWlsJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbGluazogJ3NldHRpbmdzJyxcbiAgICAgICAgdGl0bGU6ICR0cmFuc2xhdGUuaW5zdGFudCgnTkFWX1NFVFRJTkdTJyksXG4gICAgICAgIGljb246ICdzZXR0aW5ncydcbiAgICAgIH1cbiAgICBdO1xuXG4gICAgc2VsZi5pc1NlbGVjdGVkID0gZnVuY3Rpb24odGl0bGUpIHtcbiAgICAgIGlmICghJHN0YXRlLmN1cnJlbnQuaGFzT3duUHJvcGVydHkoJ2RhdGEnKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBzZWxmLnRpdGxlID0gJHRyYW5zbGF0ZS5pbnN0YW50KCRzdGF0ZS5jdXJyZW50LmRhdGEudGl0bGUpO1xuICAgICAgcmV0dXJuICh0aXRsZSA9PT0gc2VsZi50aXRsZSk7XG4gICAgfTtcblxuICAgIHNlbGYudG9nZ2xlU2lkZW5hdiA9IGZ1bmN0aW9uKCkge1xuICAgICAgJG1kU2lkZW5hdignbGVmdCcpLnRvZ2dsZSgpO1xuICAgIH07XG5cbiAgfVxuXG59KSgpOyIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuICAuY29udHJvbGxlcignU2V0dGluZ3NDdHJsJywgc2V0dGluZ3NDdHJsKTtcblxuICBzZXR0aW5nc0N0cmwuJGluamVjdCA9IFsndXNlckZhY3RvcnknXTtcblxuICBmdW5jdGlvbiBzZXR0aW5nc0N0cmwodXNlckZhY3RvcnkpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICBzZWxmLmxhbmd1YWdlcyA9IFtcbiAgICAgIHtcbiAgICAgICAgbGFuZ3VhZ2U6ICdFbmdsaXNoJyxcbiAgICAgICAgYWJicmV2OiAnZW4nLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbGFuZ3VhZ2U6ICdEZXV0c2NoZScsXG4gICAgICAgIGFiYnJldjogJ2RlJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGxhbmd1YWdlOiAnRXNwYcOxb2wnLFxuICAgICAgICBhYmJyZXY6ICdlcycsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBsYW5ndWFnZTogJ2ZyYW7Dp2FpcycsXG4gICAgICAgIGFiYnJldjogJ2ZyJyxcbiAgICAgIH0sXG4gICAgXTtcblxuICAgIHNlbGYudGltZUZvcm1hdCA9IHVzZXJGYWN0b3J5LmdldFRpbWVGb3JtYXQoKTtcbiAgICBzZWxmLmh0bWxOb3RpZmljYXRpb25Tb3VuZFN0YXR1cyA9IHVzZXJGYWN0b3J5LmdldEh0bWxOb3RpZmljYXRpb25Tb3VuZFN0YXR1cygpO1xuICAgIHNlbGYudGltZUJlZm9yZU5vdGlmaWNhdGlvbiA9IHVzZXJGYWN0b3J5LmdldFRpbWVCZWZvcmVOb3RpZmljYXRpb24oKTtcbiAgICBzZWxmLmxvY2FsZSA9IHVzZXJGYWN0b3J5LmdldExvY2FsZSgpO1xuXG4gICAgc2VsZi5zZXRUaW1lRm9ybWF0ID0gZnVuY3Rpb24oKSB7XG4gICAgICB1c2VyRmFjdG9yeS5zZXRUaW1lRm9ybWF0KHNlbGYudGltZUZvcm1hdCk7XG4gICAgfTtcblxuICAgIHNlbGYuc2V0SHRtbE5vdGlmaWNhdGlvblNvdW5kU3RhdHVzID0gZnVuY3Rpb24oKSB7XG4gICAgICB1c2VyRmFjdG9yeS5zZXRIdG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMoc2VsZi5odG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMpO1xuICAgIH1cblxuICAgIHNlbGYudXBkYXRlVGltZUJlZmVyZU5vdGlmaWNhdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgICAgdXNlckZhY3Rvcnkuc2V0VGltZUJlZm9yZU5vdGlmaWNhdGlvbihzZWxmLnRpbWVCZWZvcmVOb3RpZmljYXRpb24pO1xuICAgIH1cblxuICAgIHNlbGYudXBkYXRlTG9jYWxlID0gZnVuY3Rpb24oKSB7XG4gICAgICB1c2VyRmFjdG9yeS5zZXRMb2NhbGUoc2VsZi5sb2NhbGUpO1xuICAgIH1cblxuICB9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gIC5mYWN0b3J5KCdhcGlGYWN0b3J5JywgYXBpRmFjdG9yeSk7XG5cbiAgYXBpRmFjdG9yeS4kaW5qZWN0ID0gW107XG5cbiAgZnVuY3Rpb24gYXBpRmFjdG9yeSgpIHtcbiAgICB2YXIgc2VydmljZXMgPSB7XG4gICAgICBnZXRCYXNlVXJsOiBnZXRCYXNlVXJsLFxuICAgIH07XG5cbiAgICByZXR1cm4gc2VydmljZXM7XG5cbiAgICBmdW5jdGlvbiBnZXRCYXNlVXJsKCkge1xuICAgICAgaWYgKGRvY3VtZW50LmxvY2F0aW9uLmhvc3RuYW1lID09ICdsb2NhbGhvc3QnKVxuICAgICAgICByZXR1cm4gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCc7XG4gICAgICBlbHNlXG4gICAgICAgIHJldHVybiAnaHR0cHM6Ly9vcHRjdGltZXIuY29tJztcbiAgICB9XG4gIH1cblxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgLmZhY3RvcnkoJ2NhbGVuZGFyRmFjdG9yeScsIGNhbGVuZGFyRmFjdG9yeSk7XG5cbiAgY2FsZW5kYXJGYWN0b3J5LiRpbmplY3QgPSBbJ3VzZXJGYWN0b3J5J107XG5cbiAgZnVuY3Rpb24gY2FsZW5kYXJGYWN0b3J5KHVzZXJGYWN0b3J5KSB7XG4gICAgdmFyIHNlcnZpY2VzID0ge1xuICAgICAgZ2V0Q2FsZW5kYXI6IGdldENhbGVuZGFyLFxuICAgIH07XG5cbiAgICByZXR1cm4gc2VydmljZXM7XG5cbiAgICBmdW5jdGlvbiBnZXRDYWxlbmRhcigpIHtcbiAgICAgIHZhciBub3cgPSBtb21lbnQoKTtcblxuICAgICAgdmFyIHR1cnRsZVRpbWVzID0gdXNlckZhY3RvcnkuZ2V0VHVydGxlVGltZXMoKS5maWx0ZXIoZnVuY3Rpb24odHVydGxlVGltZSkge1xuICAgICAgICByZXR1cm4gbm93LmlzQmVmb3JlKHR1cnRsZVRpbWUpO1xuICAgICAgfSk7XG5cbiAgICAgIHZhciBjYWwgPSBpY3MoKTtcbiAgICAgIHZhciBzdWJqZWN0ID0gJ09QVEMgVHVydGxlIFRpbWUnO1xuICAgICAgdmFyIGRlc2NyaXB0aW9uID0gJ09uZSBQaWVjZSBUcmVhc3VyZSBDcnVpc2UgVHVydGxlIFRpbWUnO1xuICAgICAgdmFyIGxvY2F0aW9uID0gJ09QVEMnO1xuXG4gICAgICB2YXIgYmVnaW4sIGVuZDtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyBpKyspIHtcbiAgICAgICAgYmVnaW4gPSB0dXJ0bGVUaW1lc1tpXS5mb3JtYXQoKTtcbiAgICAgICAgZW5kID0gdHVydGxlVGltZXNbaV0uY2xvbmUoKS5hZGQoMzAsICdtaW51dGVzJykuZm9ybWF0KCk7XG4gICAgICAgIGNhbC5hZGRFdmVudChzdWJqZWN0LCBkZXNjcmlwdGlvbiwgbG9jYXRpb24sIGJlZ2luLCBlbmQpO1xuICAgICAgfVxuXG4gICAgICBjYWwuZG93bmxvYWQoJ3R1cnRsZV90aW1lcycsICcuaWNzJyk7XG4gICAgfVxuICB9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gIC5mYWN0b3J5KCdodG1sTm90aWZpY2F0aW9uRmFjdG9yeScsIGh0bWxOb3RpZmljYXRpb25GYWN0b3J5KTtcblxuICBodG1sTm90aWZpY2F0aW9uRmFjdG9yeS4kaW5qZWN0ID0gWyd1c2VyRmFjdG9yeSddO1xuXG4gIGZ1bmN0aW9uIGh0bWxOb3RpZmljYXRpb25GYWN0b3J5KHVzZXJGYWN0b3J5KSB7XG4gICAgdmFyIHNlcnZpY2VzID0ge1xuICAgICAgaXNFbmFibGVkOiBpc0VuYWJsZWQsXG4gICAgICBzZXROb3RpZmljYXRpb25zOiBzZXROb3RpZmljYXRpb25zLFxuICAgICAgcGxheUV4YW1wbGU6IHBsYXlFeGFtcGxlLFxuICAgIH07XG5cbiAgICB2YXIgbm90aWZpY2F0aW9ucyA9IFtdO1xuICAgIHZhciBzb3VuZCA9IG5ldyBBdWRpbygnc291bmRzL25vdGlmaWNhdGlvbi5tcDMnKTtcblxuICAgIHJldHVybiBzZXJ2aWNlcztcblxuICAgIGZ1bmN0aW9uIGlzRW5hYmxlZCgpIHtcbiAgICAgIHZhciBpT1MgPSAvaVBhZHxpUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgIHZhciBtb2JpbGVBbmRUYWJsZXRDaGVjayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY2hlY2sgPSBmYWxzZTtcbiAgICAgICAgKGZ1bmN0aW9uKGEpe2lmKC8oYW5kcm9pZHxiYlxcZCt8bWVlZ28pLittb2JpbGV8YXZhbnRnb3xiYWRhXFwvfGJsYWNrYmVycnl8YmxhemVyfGNvbXBhbHxlbGFpbmV8ZmVubmVjfGhpcHRvcHxpZW1vYmlsZXxpcChob25lfG9kKXxpcmlzfGtpbmRsZXxsZ2UgfG1hZW1vfG1pZHB8bW1wfG1vYmlsZS4rZmlyZWZveHxuZXRmcm9udHxvcGVyYSBtKG9ifGluKWl8cGFsbSggb3MpP3xwaG9uZXxwKGl4aXxyZSlcXC98cGx1Y2tlcnxwb2NrZXR8cHNwfHNlcmllcyg0fDYpMHxzeW1iaWFufHRyZW98dXBcXC4oYnJvd3NlcnxsaW5rKXx2b2RhZm9uZXx3YXB8d2luZG93cyBjZXx4ZGF8eGlpbm98YW5kcm9pZHxpcGFkfHBsYXlib29rfHNpbGsvaS50ZXN0KGEpfHwvMTIwN3w2MzEwfDY1OTB8M2dzb3w0dGhwfDUwWzEtNl1pfDc3MHN8ODAyc3xhIHdhfGFiYWN8YWMoZXJ8b298c1xcLSl8YWkoa298cm4pfGFsKGF2fGNhfGNvKXxhbW9pfGFuKGV4fG55fHl3KXxhcHR1fGFyKGNofGdvKXxhcyh0ZXx1cyl8YXR0d3xhdShkaXxcXC1tfHIgfHMgKXxhdmFufGJlKGNrfGxsfG5xKXxiaShsYnxyZCl8YmwoYWN8YXopfGJyKGV8dil3fGJ1bWJ8YndcXC0obnx1KXxjNTVcXC98Y2FwaXxjY3dhfGNkbVxcLXxjZWxsfGNodG18Y2xkY3xjbWRcXC18Y28obXB8bmQpfGNyYXd8ZGEoaXR8bGx8bmcpfGRidGV8ZGNcXC1zfGRldml8ZGljYXxkbW9ifGRvKGN8cClvfGRzKDEyfFxcLWQpfGVsKDQ5fGFpKXxlbShsMnx1bCl8ZXIoaWN8azApfGVzbDh8ZXooWzQtN10wfG9zfHdhfHplKXxmZXRjfGZseShcXC18Xyl8ZzEgdXxnNTYwfGdlbmV8Z2ZcXC01fGdcXC1tb3xnbyhcXC53fG9kKXxncihhZHx1bil8aGFpZXxoY2l0fGhkXFwtKG18cHx0KXxoZWlcXC18aGkocHR8dGEpfGhwKCBpfGlwKXxoc1xcLWN8aHQoYyhcXC18IHxffGF8Z3xwfHN8dCl8dHApfGh1KGF3fHRjKXxpXFwtKDIwfGdvfG1hKXxpMjMwfGlhYyggfFxcLXxcXC8pfGlicm98aWRlYXxpZzAxfGlrb218aW0xa3xpbm5vfGlwYXF8aXJpc3xqYSh0fHYpYXxqYnJvfGplbXV8amlnc3xrZGRpfGtlaml8a2d0KCB8XFwvKXxrbG9ufGtwdCB8a3djXFwtfGt5byhjfGspfGxlKG5vfHhpKXxsZyggZ3xcXC8oa3xsfHUpfDUwfDU0fFxcLVthLXddKXxsaWJ3fGx5bnh8bTFcXC13fG0zZ2F8bTUwXFwvfG1hKHRlfHVpfHhvKXxtYygwMXwyMXxjYSl8bVxcLWNyfG1lKHJjfHJpKXxtaShvOHxvYXx0cyl8bW1lZnxtbygwMXwwMnxiaXxkZXxkb3x0KFxcLXwgfG98dil8enopfG10KDUwfHAxfHYgKXxtd2JwfG15d2F8bjEwWzAtMl18bjIwWzItM118bjMwKDB8Mil8bjUwKDB8Mnw1KXxuNygwKDB8MSl8MTApfG5lKChjfG0pXFwtfG9ufHRmfHdmfHdnfHd0KXxub2soNnxpKXxuenBofG8yaW18b3AodGl8d3YpfG9yYW58b3dnMXxwODAwfHBhbihhfGR8dCl8cGR4Z3xwZygxM3xcXC0oWzEtOF18YykpfHBoaWx8cGlyZXxwbChheXx1Yyl8cG5cXC0yfHBvKGNrfHJ0fHNlKXxwcm94fHBzaW98cHRcXC1nfHFhXFwtYXxxYygwN3wxMnwyMXwzMnw2MHxcXC1bMi03XXxpXFwtKXxxdGVrfHIzODB8cjYwMHxyYWtzfHJpbTl8cm8odmV8em8pfHM1NVxcL3xzYShnZXxtYXxtbXxtc3xueXx2YSl8c2MoMDF8aFxcLXxvb3xwXFwtKXxzZGtcXC98c2UoYyhcXC18MHwxKXw0N3xtY3xuZHxyaSl8c2doXFwtfHNoYXJ8c2llKFxcLXxtKXxza1xcLTB8c2woNDV8aWQpfHNtKGFsfGFyfGIzfGl0fHQ1KXxzbyhmdHxueSl8c3AoMDF8aFxcLXx2XFwtfHYgKXxzeSgwMXxtYil8dDIoMTh8NTApfHQ2KDAwfDEwfDE4KXx0YShndHxsayl8dGNsXFwtfHRkZ1xcLXx0ZWwoaXxtKXx0aW1cXC18dFxcLW1vfHRvKHBsfHNoKXx0cyg3MHxtXFwtfG0zfG01KXx0eFxcLTl8dXAoXFwuYnxnMXxzaSl8dXRzdHx2NDAwfHY3NTB8dmVyaXx2aShyZ3x0ZSl8dmsoNDB8NVswLTNdfFxcLXYpfHZtNDB8dm9kYXx2dWxjfHZ4KDUyfDUzfDYwfDYxfDcwfDgwfDgxfDgzfDg1fDk4KXx3M2MoXFwtfCApfHdlYmN8d2hpdHx3aShnIHxuY3xudyl8d21sYnx3b251fHg3MDB8eWFzXFwtfHlvdXJ8emV0b3x6dGVcXC0vaS50ZXN0KGEuc3Vic3RyKDAsNCkpKWNoZWNrID0gdHJ1ZX0pKG5hdmlnYXRvci51c2VyQWdlbnR8fG5hdmlnYXRvci52ZW5kb3J8fHdpbmRvdy5vcGVyYSk7XG4gICAgICAgIHJldHVybiBjaGVjaztcbiAgICAgIH07XG5cbiAgICAgIC8vIGlmIG5vdCBzdXBwb3J0ZWQsIHNob3cgbWVzYWdlXG4gICAgICBpZiAoIShcIk5vdGlmaWNhdGlvblwiIGluIHdpbmRvdykgfHwgbW9iaWxlQW5kVGFibGV0Q2hlY2soKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgZWxzZSB7XG4gICAgICAgIE5vdGlmaWNhdGlvbi5yZXF1ZXN0UGVybWlzc2lvbigpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXROb3RpZmljYXRpb25zKCkge1xuICAgICAgdmFyIHR1cnRsZVRpbWVzID0gdXNlckZhY3RvcnkuZ2V0VHVydGxlVGltZXMoKTtcbiAgICAgIHZhciBzb3VuZEVuYWJsZWQgPSB1c2VyRmFjdG9yeS5nZXRIdG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMoKTtcblxuICAgICAgdmFyIG5vdyA9IG1vbWVudCgpO1xuICAgICAgdmFyIG1pbnV0ZXMgPSB1c2VyRmFjdG9yeS5nZXRUaW1lQmVmb3JlTm90aWZpY2F0aW9uKCk7XG4gICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgYm9keTogbWludXRlcyArICcgbWludXRlcyB0aWxsIFR1cnRsZSBUaW1lIScsXG4gICAgICAgIGljb246ICdmYXZpY29uLmljbydcbiAgICAgIH07XG4gICAgICB2YXIgdGltZVVudGlsO1xuICAgICAgdmFyIGVuZCA9IG1vbWVudCgpLmFkZCgzLCdkYXlzJyk7XG5cbiAgICAgIGZvciAodmFyIGk9MDsgaTx0dXJ0bGVUaW1lcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAobm93LmlzQWZ0ZXIodHVydGxlVGltZXNbaV0pIHx8IHR1cnRsZVRpbWVzW2ldLmlzQWZ0ZXIoZW5kKSlcbiAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICB0aW1lVW50aWwgPSB0dXJ0bGVUaW1lc1tpXS5mb3JtYXQoJ3gnKSAtIG5vdy5mb3JtYXQoJ3gnKTtcbiAgICAgICAgdGltZVVudGlsIC09IChtaW51dGVzICogMTAwMCk7XG4gICAgICAgIGlmICh0aW1lVW50aWwgPCAwIHx8IGlzTmFOKHRpbWVVbnRpbCkpXG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIGlmIChub3RpZmljYXRpb25zW2ldICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgY2xlYXJUaW1lb3V0KG5vdGlmaWNhdGlvbnNbaV0pO1xuXG4gICAgICAgIG5vdGlmaWNhdGlvbnNbaV0gPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBOb3RpZmljYXRpb24oXCJPUFRDIFR1cnRsZSBUaW1lXCIsIG9wdGlvbnMpO1xuICAgICAgICAgIGlmIChzb3VuZEVuYWJsZWQpXG4gICAgICAgICAgICBzb3VuZC5wbGF5KCk7XG4gICAgICAgIH0sIHRpbWVVbnRpbCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcGxheUV4YW1wbGUoKSB7XG4gICAgICB2YXIgbWludXRlcyA9IHVzZXJGYWN0b3J5LmdldFRpbWVCZWZvcmVOb3RpZmljYXRpb24oKTtcbiAgICAgIHZhciBzb3VuZEVuYWJsZWQgPSB1c2VyRmFjdG9yeS5nZXRIdG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMoKTtcbiAgICAgIFxuICAgICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgIGJvZHk6IG1pbnV0ZXMgKyAnIG1pbnV0ZXMgdGlsbCBUdXJ0bGUgVGltZSEnLFxuICAgICAgICBpY29uOiAnLi4vaW1hZ2VzL2ZsYWcucG5nJ1xuICAgICAgfTtcblxuICAgICAgdmFyIGluc3RhbmNlID0gbmV3IE5vdGlmaWNhdGlvbihcIk9QVEMgVHVydGxlIFRpbWVcIiwgb3B0aW9ucyk7XG4gICAgICBpZiAoc291bmRFbmFibGVkKVxuICAgICAgICBzb3VuZC5wbGF5KCk7XG4gICAgfVxuICB9XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gIC5mYWN0b3J5KCdub3RpZmljYXRpb25GYWN0b3J5Jywgbm90aWZpY2F0aW9uRmFjdG9yeSk7XG5cbiAgbm90aWZpY2F0aW9uRmFjdG9yeS4kaW5qZWN0ID0gWyckaHR0cCcsICd1c2VyRmFjdG9yeScsICdhcGlGYWN0b3J5J107XG5cbiAgZnVuY3Rpb24gbm90aWZpY2F0aW9uRmFjdG9yeSgkaHR0cCwgdXNlckZhY3RvcnksIGFwaUZhY3RvcnkpIHtcbiAgICB2YXIgc2VydmljZXMgPSB7XG4gICAgICBpc0VuYWJsZWQ6IGlzRW5hYmxlZCxcbiAgICAgIHN1YnNjcmliZTogc3Vic2NyaWJlLFxuICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlLFxuICAgICAgcGxheUV4YW1wbGU6IHBsYXlFeGFtcGxlLFxuICAgIH07XG5cbiAgICB2YXIgcmVnO1xuICAgIHZhciBzdWI7XG5cblxuICAgIHJldHVybiBzZXJ2aWNlcztcblxuICAgIGZ1bmN0aW9uIGlzRW5hYmxlZCgpIHtcbiAgICAgIHJldHVybiAnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGF0dGFjaFdvcmtlcigpIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgaWYgKGlzRW5hYmxlZCgpKSB7XG4gICAgICAgICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoJ3NlcnZpY2Utd29ya2VyLmpzJykgIFxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlYWR5O1xuICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24oc2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbikge1xuICAgICAgICAgICAgcmVnID0gc2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbjtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTZXJ2aWNlIFdvcmtlciBpcyByZWFkeS4nKTtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTZXJ2aWNlIFdvcmtlciBFcnJvci4nKTtcbiAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlamVjdCgnc2VydmljZSB3b3JrZXJzIG5vdCBzdXBwb3J0ZWQnKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc3Vic2NyaWJlKGNiKSB7XG4gICAgICBpZiAoIXJlZykge1xuICAgICAgICBhdHRhY2hXb3JrZXIoKS50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGF1eCgpO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF1eCgpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBhdXgoKSB7XG4gICAgICAgIHJlZy5wdXNoTWFuYWdlci5nZXRTdWJzY3JpcHRpb24oKS50aGVuKGZ1bmN0aW9uKHB1c2hTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICBpZiAocHVzaFN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgc3ViID0gcHVzaFN1YnNjcmlwdGlvbjtcbiAgICAgICAgICAgIHNlbmRTdWJzY3JpcHRpb25Ub1NlcnZlcigpO1xuICAgICAgICAgICAgcmV0dXJuIGNiKG51bGwpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJlZy5wdXNoTWFuYWdlci5zdWJzY3JpYmUoe3VzZXJWaXNpYmxlT25seTogdHJ1ZX0pXG4gICAgICAgICAgLnRoZW4oZnVuY3Rpb24ocHVzaFN1YnNjcmlwdGlvbikge1xuICAgICAgICAgICAgc3ViID0gcHVzaFN1YnNjcmlwdGlvbjtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlbmRwb2ludCA9Jywgc3ViLmVuZHBvaW50KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTdWJzY3JpYmVkLicpO1xuICAgICAgICAgICAgc2VuZFN1YnNjcmlwdGlvblRvU2VydmVyKCk7XG4gICAgICAgICAgICBjYihudWxsKTtcbiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdVbmFibGUgdG8gc3Vic2NyaWJlLicpO1xuICAgICAgICAgICAgY2IoZXJyKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdW5zdWJzY3JpYmUoY2IpIHtcbiAgICAgIHN1Yi51bnN1YnNjcmliZSgpLnRoZW4oZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1Vuc3Vic2NyaWJlZC4nLCBldmVudCk7XG4gICAgICAgIGNiKG51bGwpO1xuICAgICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdFcnJvciB1bnN1YnNjcmliaW5nLicpO1xuICAgICAgICBjYihlcnIpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2VuZFN1YnNjcmlwdGlvblRvU2VydmVyKCkge1xuICAgICAgdmFyIGVuZHBvaW50ID0gc3ViLmVuZHBvaW50O1xuXG4gICAgICBpZiAoZW5kcG9pbnQubWF0Y2goL15odHRwczpcXC9cXC9hbmRyb2lkXFwuZ29vZ2xlYXBpc1xcLmNvbVxcL2djbVxcL3NlbmQvKSkge1xuICAgICAgICB2YXIgcmVnaXN0cmF0aW9uSWQgPSBlbmRwb2ludC5tYXRjaCgvKD86Lio/KXNlbmRcXC8oLiopJC8pWzFdO1xuICAgICAgICBlbmRwb2ludCA9ICdodHRwczovL2FuZHJvaWQuZ29vZ2xlYXBpcy5jb20vZ2NtL3NlbmQnO1xuICAgICAgICB1c2VyRmFjdG9yeS5zZXRSZWdpc3RyYXRpb25JZChyZWdpc3RyYXRpb25JZCk7XG4gICAgICB9XG5cbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIHBsYXlFeGFtcGxlKCkge1xuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIHJlZ2lzdHJhdGlvbklkczogW3VzZXJGYWN0b3J5LmdldFJlZ2lzdHJhdGlvbklkKCldLFxuICAgICAgfTtcblxuICAgICAgY29uc29sZS5sb2coJ2RhdGEgPScsIGRhdGEpO1xuXG4gICAgICAkaHR0cC5wb3N0KGFwaUZhY3RvcnkuZ2V0QmFzZVVybCgpICsgJy9hcGkvZ2NtJywgZGF0YSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uIHN1Y2Nlc3MoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzZW50IHRvIHNlcnZlcicpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbiBlcnJvcigpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yIHBvc3RpbmcgdG8gc2VydmVyJyk7XG4gICAgICB9KTtcbiAgICB9XG59XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gIC5mYWN0b3J5KCd0aW1lRmFjdG9yeScsIHRpbWVGYWN0b3J5KTtcblxuICB0aW1lRmFjdG9yeS4kaW5qZWN0ID0gWyckaHR0cCcsICd1c2VyRmFjdG9yeScsICdhcGlGYWN0b3J5J107XG5cbiAgZnVuY3Rpb24gdGltZUZhY3RvcnkoJGh0dHAsIHVzZXJGYWN0b3J5LCBhcGlGYWN0b3J5KSB7XG4gICAgdmFyIHNlcnZpY2VzID0ge1xuICAgICAgZ2V0VHVydGxlVGltZXM6IGdldFR1cnRsZVRpbWVzLFxuICAgIH07XG5cbiAgICB2YXIgZ2xvYmFsSG90Zml4ID0gZmFsc2U7XG4gICAgdmFyIGdsb2JhbEhvdGZpeERhdGUgPSAnMjAxNS0wOS0xNyc7XG4gICAgdmFyIGphcGFuSG90Zml4ID0gZmFsc2U7XG4gICAgdmFyIGphcGFuSG90Zml4RGF0ZSA9ICcyMDE1LTA5LTE3JztcblxuICAgIHJldHVybiBzZXJ2aWNlcztcblxuICAgIGZ1bmN0aW9uIGdldFR1cnRsZVRpbWVzKGNiKSB7XG4gICAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICBkaWdpdDogdXNlckZhY3RvcnkuZ2V0RGlnaXQoKSxcbiAgICAgICAgICB0aW1lRm9ybWF0OiB1c2VyRmFjdG9yeS5nZXRUaW1lRm9ybWF0KCksXG4gICAgICAgICAgdmVyc2lvbjogdXNlckZhY3RvcnkuZ2V0VmVyc2lvbigpLFxuICAgICAgICAgIG51bU9mRGF5czogMyxcbiAgICAgICAgfSxcbiAgICAgIH1cblxuICAgICAgJGh0dHAuZ2V0KGFwaUZhY3RvcnkuZ2V0QmFzZVVybCgpICsgJy9hcGkvdHVydGxlJywgcGFyYW1zKVxuICAgICAgLnRoZW4oZnVuY3Rpb24gc3VjY2VzcyhyZXNwb25zZSkge1xuICAgICAgICB1c2VyRmFjdG9yeS5zZXRUdXJ0bGVUaW1lcyhyZXNwb25zZS5kYXRhLm1hcChmdW5jdGlvbih0aW1lKSB7XG4gICAgICAgICAgcmV0dXJuIG1vbWVudC51dGModGltZSk7XG4gICAgICAgIH0pKTtcbiAgICAgICAgdmFyIHR1cnRsZVRpbWVzID0gZ2V0Rm9ybWF0dGVkVGltZXMocmVzcG9uc2UuZGF0YSk7XG4gICAgICAgIGNiKG51bGwsIHR1cnRsZVRpbWVzKTtcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIGVycm9yKGVycikge1xuICAgICAgICBjYihlcnIpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Rm9ybWF0dGVkVGltZXModHVydGxlVGltZXMpIHtcbiAgICAgIHZhciB0aW1lRm9ybWF0ID0gdXNlckZhY3RvcnkuZ2V0VGltZUZvcm1hdCgpO1xuXG4gICAgICByZXR1cm4gdHVydGxlVGltZXMubWFwKGZ1bmN0aW9uKHRpbWVTdHIpIHtcbiAgICAgICAgdmFyIHRpbWUsIGRhdGU7XG4gICAgICAgIHZhciB0dXJ0bGVUaW1lID0gbW9tZW50LnV0Yyh0aW1lU3RyKTtcblxuICAgICAgICBpZiAodGltZUZvcm1hdCA9PT0gJ3N0YW5kYXJkJylcbiAgICAgICAgICB0aW1lID0gdHVydGxlVGltZS5sb2NhbCgpLmZvcm1hdCgnaDptbSBhJyk7XG4gICAgICAgIGVsc2UgaWYgKHRpbWVGb3JtYXQgPT09ICdtaWxpdGFyeScpXG4gICAgICAgICAgdGltZSA9IHR1cnRsZVRpbWUubG9jYWwoKS5mb3JtYXQoJ0hIOm1tJyk7XG5cbiAgICAgICAgZGF0ZSA9IHR1cnRsZVRpbWUubG9jYWwoKS5mb3JtYXQoJ0xMJyk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0aW1lOiB0aW1lLFxuICAgICAgICAgIGRhdGU6IGRhdGUsXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG59KSgpOyIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuICAuY29udHJvbGxlcignVHVydGxlQ3RybCcsIHR1cnRsZUN0cmwpO1xuXG4gIHR1cnRsZUN0cmwuJGluamVjdCA9IFsnJHNjb3BlJywgJ3VzZXJGYWN0b3J5JywgJ3RpbWVGYWN0b3J5JywgJ25vdGlmaWNhdGlvbkZhY3RvcnknLCAnaHRtbE5vdGlmaWNhdGlvbkZhY3RvcnknLCAnY2FsZW5kYXJGYWN0b3J5J107XG4gIFxuICBmdW5jdGlvbiB0dXJ0bGVDdHJsKCRzY29wZSwgdXNlckZhY3RvcnksIHRpbWVGYWN0b3J5LCBub3RpZmljYXRpb25GYWN0b3J5LCBodG1sTm90aWZpY2F0aW9uRmFjdG9yeSwgY2FsZW5kYXJGYWN0b3J5KSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgc2V0UGFyYW1zKCk7XG5cbiAgICBmdW5jdGlvbiBzZXRQYXJhbXMoKSB7XG4gICAgICBzZWxmLnRpbWV6b25lID0gdXNlckZhY3RvcnkuZ2V0VGltZVpvbmUoKTtcbiAgICAgIHNlbGYuZGlnaXQgPSB1c2VyRmFjdG9yeS5nZXREaWdpdCgpO1xuICAgICAgc2VsZi52ZXJzaW9uID0gdXNlckZhY3RvcnkuZ2V0VmVyc2lvbigpO1xuICAgICAgc2VsZi50dXJ0bGVUaW1lcyA9IFtdO1xuICAgICAgc2VsZi5ub3RpZmljYXRpb25TdGF0dXMgPSB0cnVlO1xuICAgICAgc2VsZi5odG1sTm90aWZpY2F0aW9uU3RhdHVzID0gdXNlckZhY3RvcnkuZ2V0SHRtbE5vdGlmaWNhdGlvblN0YXR1cygpO1xuICAgICAgc2VsZi5ub3RpZmljYXRpb25FbmFibGVkID0gbm90aWZpY2F0aW9uRmFjdG9yeS5pc0VuYWJsZWQoKTtcbiAgICAgIHNlbGYuaHRtbE5vdGlmaWNhdGlvbkVuYWJsZWQgPSBodG1sTm90aWZpY2F0aW9uRmFjdG9yeS5pc0VuYWJsZWQoKTtcbiAgICAgIGdldFR1cnRsZVRpbWVzKCk7XG4gICAgICB0b2dnbGVOb3RpZmljYXRpb24oKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b2dnbGVOb3RpZmljYXRpb24oKSB7XG4gICAgICBpZiAoc2VsZi5ub3RpZmljYXRpb25TdGF0dXMpIHtcbiAgICAgICAgbm90aWZpY2F0aW9uRmFjdG9yeS5zdWJzY3JpYmUoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgc2VsZi5ub3RpZmljYXRpb25TdGF0dXMgPSBmYWxzZTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc29sZS5sb2coJ3N1YnNjcmliZWQnKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub3RpZmljYXRpb25GYWN0b3J5LnVuc3Vic2NyaWJlKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICBzZWxmLm5vdGlmaWNhdGlvblN0YXR1cyA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc29sZS5sb2coJ3Vuc3Vic2NyaWJlZCcpO1xuICAgICAgICB9KVxuICAgICAgfSAgICAgIFxuICAgIH1cblxuICAgIHNlbGYudG9nZ2xlTm90aWZpY2F0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICB0b2dnbGVOb3RpZmljYXRpb24oKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRUdXJ0bGVUaW1lcygpIHtcbiAgICAgIHRpbWVGYWN0b3J5LmdldFR1cnRsZVRpbWVzKGZ1bmN0aW9uKGVyciwgdHVydGxlVGltZXMpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCd1bmFibGUgdG8gcmV0cmlldmUgdGltZXMnKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBzZWxmLnR1cnRsZVRpbWVzID0gdHVydGxlVGltZXM7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBzZWxmLnVwZGF0ZURpZ2l0ID0gZnVuY3Rpb24oKSB7XG4gICAgICB1c2VyRmFjdG9yeS5zZXREaWdpdChzZWxmLmRpZ2l0KTtcbiAgICAgIGdldFR1cnRsZVRpbWVzKCk7XG4gICAgfTtcblxuICAgIHNlbGYudXBkYXRlVmVyc2lvbiA9IGZ1bmN0aW9uKCkge1xuICAgICAgdXNlckZhY3Rvcnkuc2V0VmVyc2lvbihzZWxmLnZlcnNpb24pO1xuICAgICAgZ2V0VHVydGxlVGltZXMoKTtcbiAgICB9O1xuXG4gICAgc2VsZi51cGRhdGVIdG1sTm90aWZpY2F0aW9uU3RhdHVzID0gZnVuY3Rpb24oKSB7XG4gICAgICB1c2VyRmFjdG9yeS5zZXRIdG1sTm90aWZpY2F0aW9uU3RhdHVzKHNlbGYuaHRtbE5vdGlmaWNhdGlvblN0YXR1cyk7XG4gICAgICBodG1sTm90aWZpY2F0aW9uRmFjdG9yeS5zZXROb3RpZmljYXRpb25zKCk7XG4gICAgfVxuXG4gICAgc2VsZi5wbGF5RXhhbXBsZU5vdGlmaWNhdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgICAgbm90aWZpY2F0aW9uRmFjdG9yeS5wbGF5RXhhbXBsZSgpO1xuICAgIH1cblxuICAgIHNlbGYucGxheUV4YW1wbGVIdG1sTm90aWZpY2F0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICBodG1sTm90aWZpY2F0aW9uRmFjdG9yeS5wbGF5RXhhbXBsZSgpO1xuICAgIH1cblxuICAgIHNlbGYuZ2V0Q2FsZW5kYXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIGNhbGVuZGFyRmFjdG9yeS5nZXRDYWxlbmRhcigpO1xuICAgIH1cbiAgfVxuXG59KSgpOyIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuICAuZmFjdG9yeSgndXNlckZhY3RvcnknLCB1c2VyRmFjdG9yeSk7XG5cbiAgdXNlckZhY3RvcnkuJGluamVjdCA9IFsnbG9jYWxTdG9yYWdlU2VydmljZScsICckaHR0cCcsICdhcGlGYWN0b3J5JywgJyR0cmFuc2xhdGUnXTtcblxuICBmdW5jdGlvbiB1c2VyRmFjdG9yeShsb2NhbFN0b3JhZ2VTZXJ2aWNlLCAkaHR0cCwgYXBpRmFjdG9yeSwgJHRyYW5zbGF0ZSkge1xuICAgIHZhciBzZXJ2aWNlcyA9IHtcbiAgICAgIGdldFRpbWVab25lOiBnZXRUaW1lWm9uZSxcbiAgICAgIGdldERpZ2l0OiBnZXREaWdpdCxcbiAgICAgIHNldERpZ2l0OiBzZXREaWdpdCxcbiAgICAgIGdldFRpbWVGb3JtYXQ6IGdldFRpbWVGb3JtYXQsXG4gICAgICBzZXRUaW1lRm9ybWF0OiBzZXRUaW1lRm9ybWF0LFxuICAgICAgZ2V0VmVyc2lvbjogZ2V0VmVyc2lvbixcbiAgICAgIHNldFZlcnNpb246IHNldFZlcnNpb24sXG4gICAgICBnZXRIdG1sTm90aWZpY2F0aW9uU3RhdHVzOiBnZXRIdG1sTm90aWZpY2F0aW9uU3RhdHVzLFxuICAgICAgc2V0SHRtbE5vdGlmaWNhdGlvblN0YXR1czogc2V0SHRtbE5vdGlmaWNhdGlvblN0YXR1cyxcbiAgICAgIGdldEh0bWxOb3RpZmljYXRpb25Tb3VuZFN0YXR1czogZ2V0SHRtbE5vdGlmaWNhdGlvblNvdW5kU3RhdHVzLFxuICAgICAgc2V0SHRtbE5vdGlmaWNhdGlvblNvdW5kU3RhdHVzOiBzZXRIdG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMsXG4gICAgICBnZXRUdXJ0bGVUaW1lczogZ2V0VHVydGxlVGltZXMsXG4gICAgICBzZXRUdXJ0bGVUaW1lczogc2V0VHVydGxlVGltZXMsXG4gICAgICBnZXRUaW1lQmVmb3JlTm90aWZpY2F0aW9uOiBnZXRUaW1lQmVmb3JlTm90aWZpY2F0aW9uLFxuICAgICAgc2V0VGltZUJlZm9yZU5vdGlmaWNhdGlvbjogc2V0VGltZUJlZm9yZU5vdGlmaWNhdGlvbixcbiAgICAgIGdldFJlZ2lzdHJhdGlvbklkOiBnZXRSZWdpc3RyYXRpb25JZCxcbiAgICAgIHNldFJlZ2lzdHJhdGlvbklkOiBzZXRSZWdpc3RyYXRpb25JZCxcbiAgICAgIGdldERldGFpbGVkSG91clN0YXR1czogZ2V0RGV0YWlsZWRIb3VyU3RhdHVzLFxuICAgICAgc2V0RGV0YWlsZWRIb3VyU3RhdHVzOiBzZXREZXRhaWxlZEhvdXJTdGF0dXMsXG4gICAgICBnZXRMb2NhbGU6IGdldExvY2FsZSxcbiAgICAgIHNldExvY2FsZTogc2V0TG9jYWxlLFxuICAgIH07XG5cbiAgICB2YXIgZGlnaXQ7XG4gICAgdmFyIHRpbWVGb3JtYXQ7XG4gICAgdmFyIHZlcnNpb247XG4gICAgdmFyIGh0bWxOb3RpZmljYXRpb25TdGF0dXM7XG4gICAgdmFyIGh0bWxOb3RpZmljYXRpb25Tb3VuZFN0YXR1cztcbiAgICB2YXIgdHVydGxlVGltZXM7XG4gICAgdmFyIHRpbWVCZWZvcmVOb3RpZmljYXRpb247XG4gICAgdmFyIHJlZ2lzdHJhdGlvbklkO1xuICAgIHZhciBkZXRhaWxlZEhvdXJTdGF0dXM7XG4gICAgdmFyIGxvY2FsZTtcbiAgICBsb2FkRnJvbVN0b3JhZ2UoKTtcblxuICAgIHJldHVybiBzZXJ2aWNlcztcblxuICAgIGZ1bmN0aW9uIGxvYWRGcm9tU3RvcmFnZSgpIHtcbiAgICAgIGRpZ2l0ID0gbG9jYWxTdG9yYWdlU2VydmljZS5nZXQoJ2RpZ2l0JykgfHwgMDtcbiAgICAgIHRpbWVGb3JtYXQgPSBsb2NhbFN0b3JhZ2VTZXJ2aWNlLmdldCgndGltZUZvcm1hdCcpIHx8ICdzdGFuZGFyZCc7XG4gICAgICB2ZXJzaW9uID0gbG9jYWxTdG9yYWdlU2VydmljZS5nZXQoJ3ZlcnNpb24nKSB8fCAnZ2xvYmFsJztcbiAgICAgIGh0bWxOb3RpZmljYXRpb25TdGF0dXMgPSBsb2NhbFN0b3JhZ2VTZXJ2aWNlLmdldCgnaHRtbE5vdGlmaWNhdGlvblN0YXR1cycpIHx8IGZhbHNlO1xuICAgICAgaHRtbE5vdGlmaWNhdGlvblNvdW5kU3RhdHVzID0gbG9jYWxTdG9yYWdlU2VydmljZS5nZXQoJ2h0bWxOb3RpZmljYXRpb25Tb3VuZFN0YXR1cycpIHx8IGZhbHNlO1xuICAgICAgdGltZUJlZm9yZU5vdGlmaWNhdGlvbiA9IGxvY2FsU3RvcmFnZVNlcnZpY2UuZ2V0KCd0aW1lQmVmb3JlTm90aWZpY2F0aW9uJykgfHwgMTA7XG4gICAgICBkZXRhaWxlZEhvdXJTdGF0dXMgPSBsb2NhbFN0b3JhZ2VTZXJ2aWNlLmdldCgnZGV0YWlsZWRIb3VyU3RhdHVzJykgfHwgZmFsc2U7XG4gICAgICBsb2NhbGUgPSBsb2NhbFN0b3JhZ2VTZXJ2aWNlLmdldCgnbG9jYWxlJykgfHwgJ2VuJztcbiAgICAgICR0cmFuc2xhdGUudXNlKGxvY2FsZSk7XG4gICAgICBtb21lbnQubG9jYWxlKGxvY2FsZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9zdFVzZXJEYXRhKCkge1xuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIGRpZ2l0OiBkaWdpdCU1LFxuICAgICAgICByZWdpc3RyYXRpb25JZDogcmVnaXN0cmF0aW9uSWQsXG4gICAgICAgIHRpbWVCZWZvcmU6IHRpbWVCZWZvcmVOb3RpZmljYXRpb24sXG4gICAgICB9O1xuXG4gICAgICAkaHR0cC5wb3N0KGFwaUZhY3RvcnkuZ2V0QmFzZVVybCgpICsgJy9hcGkvdXNlcnMnLCBkYXRhKVxuICAgICAgLnRoZW4oZnVuY3Rpb24gc3VjY2VzcygpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3Bvc3RlZCBzdWJzY3JpcHRpb24gdG8gc2VydmVyJyk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uIGVycm9yKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgcG9zdGluZyBzdWJzY3JpcHRpb24gdG8gc2VydmVyJyk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRUaW1lWm9uZSgpIHtcbiAgICAgIHJldHVybiBqc3R6LmRldGVybWluZSgpLm5hbWUoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXREaWdpdCgpIHtcbiAgICAgIHJldHVybiBkaWdpdDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXREaWdpdChkKSB7XG4gICAgICBkaWdpdCA9IGQgJSA1O1xuICAgICAgbG9jYWxTdG9yYWdlU2VydmljZS5zZXQoJ2RpZ2l0JywgZCk7XG4gICAgICBwb3N0VXNlckRhdGEoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRUaW1lRm9ybWF0KCkge1xuICAgICAgcmV0dXJuIHRpbWVGb3JtYXQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0VGltZUZvcm1hdCh0Zikge1xuICAgICAgdGltZUZvcm1hdCA9IHRmO1xuICAgICAgbG9jYWxTdG9yYWdlU2VydmljZS5zZXQoJ3RpbWVGb3JtYXQnLCB0Zik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0VmVyc2lvbigpIHtcbiAgICAgIHJldHVybiB2ZXJzaW9uO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNldFZlcnNpb24odikge1xuICAgICAgdmVyc2lvbiA9IHY7XG4gICAgICBsb2NhbFN0b3JhZ2VTZXJ2aWNlLnNldCgndmVyc2lvbicsIHYpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldEh0bWxOb3RpZmljYXRpb25TdGF0dXMoKSB7XG4gICAgICByZXR1cm4gaHRtbE5vdGlmaWNhdGlvblN0YXR1cztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRIdG1sTm90aWZpY2F0aW9uU3RhdHVzKGgpIHtcbiAgICAgIGh0bWxOb3RpZmljYXRpb25TdGF0dXMgPSBoO1xuICAgICAgbG9jYWxTdG9yYWdlU2VydmljZS5zZXQoJ2h0bWxOb3RpZmljYXRpb25TdGF0dXMnLCBoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRUdXJ0bGVUaW1lcygpIHtcbiAgICAgIHJldHVybiB0dXJ0bGVUaW1lcztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRUdXJ0bGVUaW1lcyh0dCkge1xuICAgICAgdHVydGxlVGltZXMgPSB0dDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRIdG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMoKSB7XG4gICAgICByZXR1cm4gaHRtbE5vdGlmaWNhdGlvblNvdW5kU3RhdHVzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNldEh0bWxOb3RpZmljYXRpb25Tb3VuZFN0YXR1cyhzKSB7XG4gICAgICBodG1sTm90aWZpY2F0aW9uU291bmRTdGF0dXMgPSBzO1xuICAgICAgbG9jYWxTdG9yYWdlU2VydmljZS5zZXQoJ2h0bWxOb3RpZmljYXRpb25Tb3VuZFN0YXR1cycsIHMpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFRpbWVCZWZvcmVOb3RpZmljYXRpb24oKSB7XG4gICAgICByZXR1cm4gdGltZUJlZm9yZU5vdGlmaWNhdGlvbjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRUaW1lQmVmb3JlTm90aWZpY2F0aW9uKHQpIHtcbiAgICAgIHRpbWVCZWZvcmVOb3RpZmljYXRpb24gPSB0O1xuICAgICAgbG9jYWxTdG9yYWdlU2VydmljZS5zZXQoJ3RpbWVCZWZvcmVOb3RpZmljYXRpb24nLCB0KTtcbiAgICAgIHBvc3RVc2VyRGF0YSgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFJlZ2lzdHJhdGlvbklkKCkge1xuICAgICAgcmV0dXJuIHJlZ2lzdHJhdGlvbklkO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNldFJlZ2lzdHJhdGlvbklkKHIpIHtcbiAgICAgIHJlZ2lzdHJhdGlvbklkID0gcjtcbiAgICAgIHBvc3RVc2VyRGF0YSgpOyBcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXREZXRhaWxlZEhvdXJTdGF0dXMoKSB7XG4gICAgICByZXR1cm4gZGV0YWlsZWRIb3VyU3RhdHVzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNldERldGFpbGVkSG91clN0YXR1cyhkKSB7XG4gICAgICBkZXRhaWxlZEhvdXJTdGF0dXMgPSBkO1xuICAgICAgbG9jYWxTdG9yYWdlU2VydmljZS5zZXQoJ2RldGFpbGVkSG91clN0YXR1cycsIGQpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldExvY2FsZSgpIHtcbiAgICAgIHJldHVybiBsb2NhbGU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0TG9jYWxlKGwpIHtcbiAgICAgIGxvY2FsZSA9IGw7XG4gICAgICBsb2NhbFN0b3JhZ2VTZXJ2aWNlLnNldCgnbG9jYWxlJywgbCk7XG4gICAgICAkdHJhbnNsYXRlLnVzZShsKTtcbiAgICAgIG1vbWVudC5sb2NhbGUobG9jYWxlKTtcbiAgICB9XG4gIH1cblxufSkoKTsiLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuXG4gIGFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuICAuY29uZmlnKGNvbmZpZyk7XG5cbiAgY29uZmlnLiRpbmplY3QgPSBbJyRzdGF0ZVByb3ZpZGVyJywgJyR1cmxSb3V0ZXJQcm92aWRlciddO1xuXG4gIGZ1bmN0aW9uIGNvbmZpZygkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XG4gICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnL3R1cnRsZScpO1xuXG4gICAgJHN0YXRlUHJvdmlkZXJcbiAgICAgIC5zdGF0ZSgndHVydGxlJywge1xuICAgICAgICB1cmw6ICcvdHVydGxlJyxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd0dXJ0bGUvdHVydGxlLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnVHVydGxlQ3RybCcsXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3R1cnRsZScsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICB0aXRsZTogJ05BVl9UVVJUTEUnXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2JhcnJlbCcsIHtcbiAgICAgICAgdXJsOiAnL2JhcnJlbCcsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnYmFycmVsL2JhcnJlbC5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogJ0JhcnJlbEN0cmwnLFxuICAgICAgICBjb250cm9sbGVyQXM6ICdiYXJyZWwnLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgdGl0bGU6ICdOQVZfQkFSUkVMJ1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdldmVudHMnLCB7XG4gICAgICAgIHVybDogJy9ldmVudHMnLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ2V2ZW50cy9ldmVudHMuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdFdmVudHNDdHJsJyxcbiAgICAgICAgY29udHJvbGxlckFzOiAnZXZlbnRzJyxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIHRpdGxlOiAnTkFWX0VWRU5UJ1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdjb250YWN0Jywge1xuICAgICAgICB1cmw6ICcvY29udGFjdCcsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnY29udGFjdC9jb250YWN0Lmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnQ29udGFjdEN0cmwnLFxuICAgICAgICBjb250cm9sbGVyQXM6ICdjb250YWN0JyxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIHRpdGxlOiAnTkFWX0NPTlRBQ1QnXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ3NldHRpbmdzJywge1xuICAgICAgICB1cmw6ICcvc2V0dGluZ3MnLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3NldHRpbmdzL3NldHRpbmdzLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnU2V0dGluZ3NDdHJsJyxcbiAgICAgICAgY29udHJvbGxlckFzOiAnc2V0dGluZ3MnLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgdGl0bGU6ICdOQVZfU0VUVElOR1MnXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2FkbWluJywge1xuICAgICAgICB1cmw6ICcvYWRtaW4nLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ2FkbWluL2FkbWluLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnQWRtaW5DdHJsJyxcbiAgICAgICAgY29udHJvbGxlckFzOiAnYWRtaW4nLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgdGl0bGU6ICdBZG1pbidcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgfVxufSkoKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
